{
  "hash": "4a1059db5e57498a6d170b40e7f918b8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 2\"\nsubtitle: \"In this exercise, we will explore how COVID-19 affected Thailand’s tourism economy using spatial and spatio-temporal analysis, focusing on how the impacts varied across different provinces and examining recovery patterns.\n\"\n# draft: true\ndate: \"Sep 30, 2024\"\ndate-modified: \"last-modified\"\nauthor: Teng Kok Wai (Walter)\nexecute:\n  echo: true\n  eval: true\n  freeze: auto\n  message: false\n  warning: false\nformat:\n  html:\n    code-link: true\n    toc: true\nnumber-sections: true\nnumber-offset: 1\neditor: visual\n---\n\n\n\n## Assignment Task\n\nRefer to: [Take-home Exercise 2: Discovering impacts of COVID-19 on Thailand tourism economy at the province level using spatial and spatio-temporal statistics – ISSS626 Geospatial Analytics and Applications](https://isss626-ay2024-25aug.netlify.app/take-home_ex02)\n\n## Overview\n\nTourism is a major industry in Thailand, accounting for about 20% of the GDP. In 2019, the sector generated 90 billion USD, but this dropped sharply to 24 billion USD in 2020 due to the COVID-19 pandemic. Notably,tourism revenue is also unevenly distributed, with provinces like Bangkok, Phuket, and Chiang Mai dominating the sector, while others see less impact.\n\nIn this exercise, we will explore how COVID-19 affected Thailand’s tourism economy using spatial and spatio-temporal analysis, focusing on how the impacts varied across different provinces and examining recovery patterns.\n\n## Objectives\n\nThe main objectives of this exercise are:\n\n-   if the key indicators of tourism economy of Thailand are independent from space and space and time.\n-   if the tourism economy is indeed spatial and spatio-temporal dependent, then, we will identify the locations of clusters and outliers, and the emerging hot spot/cold spot areas.\n\n## Methodology\n\nIn this exercise, we will follow these steps:\n\n1.  **Geospatial Data Preparation**: Using `sf` and `tidyverse` packages to create spatial and spatio-temporal datasets, specfically:\n\n-   a province level study area layer of Bangkok in sf polygon features\n-   a tourism economy indicators layer within the study area in sf polygon features.\n-   a derived tourism economy indicator layer in spacetime s3 class of sfdep. The time series will be at month and year levels.\n\n2.  **Global Spatial Autocorrelation Analysis**: Using `sfdep` methods to identify spatial patterns in the tourism economy.\n\n3.  **Local Spatial Autocorrelation Analysis**: Detecting clusters and outliers at the provincial level.\n\n4.  **Emerging Hotspot Analysis**: Applying spatio-temporal analysis to identify trends in tourism revenue recovery or decline.\n\n## The Data\n\nWe will use two primary datasets for this analysis:\n\n| **Dataset Name** | **Description** | **Format** | **Source** |\n|-------------------|------------------|------------------|------------------|\n| Thailand Domestic Tourism Statistics | Monthly tourism statistics, including revenue and visitor numbers at the province level. | CSV | [Kaggle](https://www.kaggle.com/datasets/thaweewatboy/thailand-domestic-tourism-statistics) |\n| Thailand - Subnational Administrative Boundaries | Geospatial data of provincial boundaries in Thailand. | ESRI Shapefile | [HDX](https://data.humdata.org/dataset/cod-ab-tha?) |\n\n## Installing and Launching the R Packages\n\nThe following R packages will be used in this exercise:\n\n| **Package**       | **Purpose**                                                                                          | **Use Case in Exercise**                                                                                        |\n|-------------------|------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|\n| **sf**            | Handles spatial data; imports, manages, and processes vector-based geospatial data.                   | Importing and managing geospatial data, such as Hunan's county boundary shapefile.                              |\n| **sfdep**         | Provides functions for spatial autocorrelation and temporal analysis, including Emerging Hot Spot Analysis (EHSA). | Performing spatio-temporal analysis using Gi* statistics and Mann-Kendall test.                                  |\n| **plotly**        | Creates interactive plots in R.                                                                       | Visualizing spatio-temporal trends with interactive plots.                                                      |\n| **tidyverse**     | A collection of R packages for data science tasks like data manipulation, visualization, and modeling. | Wrangling aspatial data and joining it with geospatial datasets.                                                |\n| **Kendall**       | Provides functions for performing the Mann-Kendall test for detecting trends in time series data.      | Performing the Mann-Kendall test to assess the trends in Gi* statistics over time.                              |\n| **spdep**         | Spatial dependence modeling and analysis tools for areal data.                                         | Conducting spatial autocorrelation analysis for cluster detection using Moran's I and other statistics.         |\n| **tmap**          | Thematic map visualization for spatial data.                                                          | Creating visually appealing maps to highlight spatial patterns.                                                 |\n| **RColorBrewer**  | Provides color palettes for enhancing visualizations.                                                  | Applying color schemes to maps for better data interpretation.                                                  |\n| **DT**            | Creates interactive tables.                                                                           | Displaying summary statistics in an interactive format for easy data exploration.                               |\n| **ggplot2**       | A versatile package for static data visualization.                                                     | Plotting spatial and aspatial data relationships, such as scatter plots and density maps.                       |\n| **corrplot**      | Visualizes correlation matrices.                                                                       | Displaying the relationships between different spatial features and their correlations.                         |\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, spdep, sfdep, tmap, knitr, DT, ggplot2, plotly, RColorBrewer, corrplot)\n```\n:::\n\n\n\n### Reproducibilty\n\nFor reproducible results of this exercise, we will use seed value, `1234`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n\n\n## Import Data\n\nIn this section, we will perform sanity checks on the raw data obtained from official sources.\n\n### Import Geospatial Data\n\n> Firstly, we import the spatial dataset of **administrative level 1 boundaries** for province-level analysis in Thailand. This forms the study area layer in **sf polygon features** and uses the **UTM Zone 47N (EPSG:32647)** CRS.\n\nWe will rename `ADM1_EN` column to be consistent with the aspatial dataset later on.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmin_boundary <- st_read(dsn = \"data/raw_data/\", \n                      layer = \"tha_admbnda_adm1_rtsd_20220121\",\n                      crs=32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/walter/code/isss626/isss626-gaa/Take-home_Ex/Take-home_Ex02/data/raw_data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nProjected CRS: WGS 84 / UTM zone 47N\n```\n\n\n:::\n\n```{.r .cell-code}\nadmin_boundary <- admin_boundary %>%\n  rename(province_eng = ADM1_EN)\n\nglimpse(admin_boundary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 17\n$ Shape_Leng   <dbl> 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.73990…\n$ Shape_Area   <dbl> 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.2139379…\n$ province_eng <chr> \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", …\n$ ADM1_TH      <chr> \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศ…\n$ ADM1_PCODE   <chr> \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"…\n$ ADM1_REF     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ADM1ALT1EN   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ADM1ALT2EN   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ADM1ALT1TH   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ADM1ALT2TH   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ ADM0_EN      <chr> \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand…\n$ ADM0_TH      <chr> \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเ…\n$ ADM0_PCODE   <chr> \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH…\n$ date         <date> 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-…\n$ validOn      <date> 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-…\n$ validTo      <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ geometry     <MULTIPOLYGON [m]> MULTIPOLYGON (((100.6139 13..., MULTIPOLYGON…\n```\n\n\n:::\n:::\n\n\n\n### Import Aspatial Data\n\nWe import and examine the aspatial tourism dataset:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_df <- read_csv(\"data/raw_data/thailand_domestic_tourism_2019_2023_ver2.csv\")\n\ntourism_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30,800 × 7\n   date       province_thai province_eng   region_thai region_eng variable value\n   <date>     <chr>         <chr>          <chr>       <chr>      <chr>    <dbl>\n 1 2019-01-01 กรุงเทพมหานคร  Bangkok        ภาคกลาง     central    ratio_t…  93.4\n 2 2019-01-01 ลพบุรี          Lopburi        ภาคกลาง     central    ratio_t…  61.3\n 3 2019-01-01 พระนครศรีอยุธยา Phra Nakhon S… ภาคกลาง     central    ratio_t…  73.4\n 4 2019-01-01 สระบุรี         Saraburi       ภาคกลาง     central    ratio_t…  67.3\n 5 2019-01-01 ชัยนาท         Chainat        ภาคกลาง     central    ratio_t…  79.3\n 6 2019-01-01 นครปฐม        Nakhon Pathom  ภาคกลาง     central    ratio_t…  71.7\n 7 2019-01-01 สิงห์บุรี         Sing Buri      ภาคกลาง     central    ratio_t…  64.6\n 8 2019-01-01 อ่างทอง        Ang Thong      ภาคกลาง     central    ratio_t…  71.2\n 9 2019-01-01 นนทบุรี         Nonthaburi     ภาคกลาง     central    ratio_t…  75.1\n10 2019-01-01 ปทุมธานี        Pathum Thani   ภาคกลาง     central    ratio_t…  60.8\n# ℹ 30,790 more rows\n```\n\n\n:::\n:::\n\n\n\nFrom the output above, we can observe that **there are 7 columns in this dataset and there are 30,800 records in this dataset**.\n\nNext, we check for missing data in the dataset:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_counts <- sapply(tourism_df, function(x) sum(is.na(x)))\nnull_counts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         date province_thai  province_eng   region_thai    region_eng \n            0             0             0             0             0 \n     variable         value \n            0             0 \n```\n\n\n:::\n\n```{.r .cell-code}\ndata.frame(Column = names(null_counts), Null_Count = null_counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     Column Null_Count\ndate                   date          0\nprovince_thai province_thai          0\nprovince_eng   province_eng          0\nregion_thai     region_thai          0\nregion_eng       region_eng          0\nvariable           variable          0\nvalue                 value          0\n```\n\n\n:::\n:::\n\n\n\nFrom the output above, there are no missing values in the dataset.\n\nNext, we check for duplicate values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate_count <- sum(duplicated(tourism_df))\nduplicate_count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\nThere are no exact duplicates in this dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(tourism_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,800\nColumns: 7\n$ date          <date> 2019-01-01, 2019-01-01, 2019-01-01, 2019-01-01, 2019-01…\n$ province_thai <chr> \"กรุงเทพมหานคร\", \"ลพบุรี\", \"พระนครศรีอยุธยา\", \"สระบุรี\", \"ชัยนาท…\n$ province_eng  <chr> \"Bangkok\", \"Lopburi\", \"Phra Nakhon Si Ayutthaya\", \"Sarab…\n$ region_thai   <chr> \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"…\n$ region_eng    <chr> \"central\", \"central\", \"central\", \"central\", \"central\", \"…\n$ variable      <chr> \"ratio_tourist_stay\", \"ratio_tourist_stay\", \"ratio_touri…\n$ value         <dbl> 93.37, 61.32, 73.37, 67.33, 79.31, 71.70, 64.65, 71.21, …\n```\n\n\n:::\n:::\n\n\n\n## Data Wrangling\n\n\nIn this section, we will perform some data cleaning, feature engineering and finally combine the two data sets for spatial and spatial-temporal analysis later on.\n\n### Data Cleaning\n\nBased on the discussions in the [Kaggle forum](https://www.kaggle.com/datasets/thaweewatboy/thailand-domestic-tourism-statistics/discussion/440540), there may be some mislabeled data and the provided data dictionary may not match this version (ver. 2) of the dataset. \n\n\nIn essence, we will address these issues in this section step by step:\n\n1. Drop unused columns in Thai.\n2. Simplify the region name `\"east_northeast\"` to `\"northeast\"`.\n3. Correct the region name for Sisaket.\n4. Create a \"bmr\" region to further differentiate the Bangkok Metropolitan Region for more fine-grained analysis later on.\n5. Create a `time_period` to indictate pre-covid, covid, post-covid periods.\n6. Factorize `date` into months and years\n7. Create a `date_int` to faciliate space-time cube creation\n8. Pivot the dataset to a wider format for analysis.\n9. Check for discrepancies in region names as we will join both dataset with this field.\n\n:::callout-note\n\n### Recap on the Covid-19 Pandemic Timeline for Thailand\n\nTo better understand the impact of the pandemic on Thailand's tourism industry, it's essential to distinguish the key phases of the pandemic: **pre-covid, covid and post-covid phases**.\n\n\n| Event                                   | Date(s)            |\n|-----------------------------------------|--------------------|\n| First COVID-19 Case in Thailand         | January 13, 2020   |\n| Start of Foreign Travel Ban             | April 06, 2020     |\n| Nationwide Lockdown Begins              | March 26, 2020     |\n| Emergency Decree Enforced               | March 26, 2020     |\n| Lockdown Lifted                         | August 31, 2021    |\n| Final Foreign Travel Ban Lifted         | November 1, 2021   |\n| End of Emergency Decree                 | September 30, 2022 |\n\n\nFrom this, we can define pandemic period as **Jan 2020 to September 2022**.\n\n**Sources:**\n\n- [Timeline of the COVID-19 pandemic in Thailand - Wikipedia](https://en.wikipedia.org/wiki/Timeline_of_the_COVID-19_pandemic_in_Thailand)\n- [Thailand - Full Restrictions, Travel regulations, Coronavirus regulations, travel bans - Travelbans](https://travelbans.org/en/asia/thailand/full-restrictions)\n- [Thailand ends COVID-19 Emergency Decree on 30 September 2022 - TAT Newsroom](https://www.tatnews.org/2022/09/thailand-ends-covid-19-emergency-decree-on-30-september-2022/)\n\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# remove th columns\ntourism_df <- tourism_df %>%\n  select(-province_thai, -region_thai)\n\n# examine unique values\nlapply(tourism_df %>% select(-value), unique)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$date\n [1] \"2019-01-01\" \"2020-01-01\" \"2021-01-01\" \"2022-01-01\" \"2023-01-01\"\n [6] \"2019-02-01\" \"2020-02-01\" \"2021-02-01\" \"2022-02-01\" \"2023-02-01\"\n[11] \"2019-03-01\" \"2020-03-01\" \"2021-03-01\" \"2022-03-01\" \"2019-04-01\"\n[16] \"2020-04-01\" \"2021-04-01\" \"2022-04-01\" \"2019-05-01\" \"2020-05-01\"\n[21] \"2021-05-01\" \"2022-05-01\" \"2019-06-01\" \"2020-06-01\" \"2021-06-01\"\n[26] \"2022-06-01\" \"2019-07-01\" \"2020-07-01\" \"2021-07-01\" \"2022-07-01\"\n[31] \"2019-08-01\" \"2020-08-01\" \"2021-08-01\" \"2022-08-01\" \"2019-09-01\"\n[36] \"2020-09-01\" \"2021-09-01\" \"2022-09-01\" \"2019-10-01\" \"2020-10-01\"\n[41] \"2021-10-01\" \"2022-10-01\" \"2019-11-01\" \"2020-11-01\" \"2021-11-01\"\n[46] \"2022-11-01\" \"2019-12-01\" \"2020-12-01\" \"2021-12-01\" \"2022-12-01\"\n\n$province_eng\n [1] \"Bangkok\"                  \"Lopburi\"                 \n [3] \"Phra Nakhon Si Ayutthaya\" \"Saraburi\"                \n [5] \"Chainat\"                  \"Nakhon Pathom\"           \n [7] \"Sing Buri\"                \"Ang Thong\"               \n [9] \"Nonthaburi\"               \"Pathum Thani\"            \n[11] \"Samut Prakan\"             \"Samut Sakhon\"            \n[13] \"Chachoengsao\"             \"Ratchaburi\"              \n[15] \"Kanchanaburi\"             \"Samut Songkhram\"         \n[17] \"Suphan Buri\"              \"Phetchaburi\"             \n[19] \"Prachuap Khiri Khan\"      \"Chonburi\"                \n[21] \"Chanthaburi\"              \"Trat\"                    \n[23] \"Nakhon Nayok\"             \"Prachinburi\"             \n[25] \"Rayong\"                   \"Sa Kaeo\"                 \n[27] \"Phuket\"                   \"Phatthalung\"             \n[29] \"Trang\"                    \"Ranong\"                  \n[31] \"Chumphon\"                 \"Pattani\"                 \n[33] \"Yala\"                     \"Nakhon Si Thammarat\"     \n[35] \"Narathiwat\"               \"Krabi\"                   \n[37] \"Songkhla\"                 \"Phang Nga\"               \n[39] \"Surat Thani\"              \"Satun\"                   \n[41] \"Kamphaeng Phet\"           \"Chiang Rai\"              \n[43] \"Chiang Mai\"               \"Phichit\"                 \n[45] \"Nakhon Sawan\"             \"Tak\"                     \n[47] \"Phitsanulok\"              \"Phayao\"                  \n[49] \"Phetchabun\"               \"Phrae\"                   \n[51] \"Lampang\"                  \"Lamphun\"                 \n[53] \"Mae Hong Son\"             \"Uttaradit\"               \n[55] \"Uthai Thani\"              \"Sukhothai\"               \n[57] \"Nan\"                      \"Kalasin\"                 \n[59] \"Khon Kaen\"                \"Chaiyaphum\"              \n[61] \"Nakhon Phanom\"            \"Nakhon Ratchasima\"       \n[63] \"Buriram\"                  \"Maha Sarakham\"           \n[65] \"Mukdahan\"                 \"Roi Et\"                  \n[67] \"Loei\"                     \"Sisaket\"                 \n[69] \"Surin\"                    \"Nong Khai\"               \n[71] \"Bueng Kan\"                \"Udon Thani\"              \n[73] \"Ubon Ratchathani\"         \"Sakon Nakhon\"            \n[75] \"Yasothon\"                 \"Amnat Charoen\"           \n[77] \"Nong Bua Lamphu\"         \n\n$region_eng\n[1] \"central\"        \"east\"           \"south\"          \"north\"         \n[5] \"east_northeast\"\n\n$variable\n[1] \"ratio_tourist_stay\" \"no_tourist_stay\"    \"no_tourist_all\"    \n[4] \"no_tourist_thai\"    \"no_tourist_foreign\" \"revenue_all\"       \n[7] \"revenue_thai\"       \"revenue_foreign\"   \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# examine sisaket's region\ncheck_sisaket <- tourism_df %>%\n  filter(province_eng == \"Sisaket\") %>%\n  select(province_eng, region_eng) %>%\n  head(5)\n\ncheck_sisaket\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  province_eng region_eng\n  <chr>        <chr>     \n1 Sisaket      south     \n2 Sisaket      south     \n3 Sisaket      south     \n4 Sisaket      south     \n5 Sisaket      south     \n```\n\n\n:::\n:::\n\n\n\nFrom the check, we notice Sisaket is indeed incorrectly labeled.\n\nWe then correct region names and assign provinces in the Bangkok Metropolitan Region to `\"bmr\"`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmr_list<- c(\"Bangkok\", \"Nonthaburi\", \"Nakhon Pathom\", \"Pathum Thani\", \n           \"Samut Prakan\", \"Samut Sakhon\")\n\ntourism_df_cleaned <- tourism_df %>%\n  mutate(\n    # Rename the \"east_northeast\" region to \"northeast\"\n    region_eng = ifelse(region_eng == \"east_northeast\", \"northeast\", region_eng),\n    # Correct the region for Sisaket\n    region_eng = ifelse(province_eng == \"Sisaket\", \"northeast\", region_eng),\n    # Set the region to \"bmr\" for provinces in the metro list\n    region_eng = ifelse(province_eng %in% bmr_list, \"bmr\", region_eng),\n    # Create covid period column\n    time_period = case_when(\n      date < as.Date(\"2020-01-01\") ~ \"pre-covid\",\n      date >= as.Date(\"2020-01-01\") & date <= as.Date(\"2022-10-01\") ~ \"covid\",\n      date >= as.Date(\"2022-10-01\") ~ \"post-covid\"\n    ),\n    # Extract month number (1 = January, 12 = December)\n    month_number = month(date),\n    # Extract month as factor (\"Jan\", \"Feb\")\n    month_factor = month(date, label = TRUE, abbr = TRUE),\n    # Extract year\n    year = year(date),\n    # Make single date column for spacetimecube\n    date_int = as.numeric(format(date, \"%Y%m\"))\n  ) %>%\n  # Drop date column\n  select(-date)\n```\n:::\n\n\n\nWe check for unmatched region names between the spatial and aspatial datasets:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find and see all unmatched values between admin_boundary and tourism_df\nunmatched_region_names <- union(\n  anti_join(admin_boundary, tourism_df_cleaned, by = c(\"province_eng\")) %>% pull(province_eng),\n  anti_join(tourism_df_cleaned, admin_boundary, by = c(\"province_eng\")) %>% pull(province_eng)\n) %>% sort()\n\nunmatched_region_names\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Buri Ram\"         \"Buriram\"          \"Chai Nat\"         \"Chainat\"         \n [5] \"Chon Buri\"        \"Chonburi\"         \"Lop Buri\"         \"Lopburi\"         \n [9] \"Nong Bua Lam Phu\" \"Nong Bua Lamphu\"  \"Phang Nga\"        \"Phangnga\"        \n[13] \"Prachin Buri\"     \"Prachinburi\"      \"Si Sa Ket\"        \"Sisaket\"         \n```\n\n\n:::\n:::\n\n\n\nWe notice some discrepancies, such as inconsistent spacing in names (e.g., `\"Buri Ram\"` vs. `\"Buriram\"`).\n\nWe also pivot the dataset and correct the inconsistent province names:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_df_pivot <- tourism_df_cleaned %>%\n  pivot_wider(names_from = \"variable\", values_from = \"value\") %>%\n  mutate(province_eng = recode(trimws(province_eng),\n                               \"Buriram\" = \"Buri Ram\",\n                               \"Chainat\" = \"Chai Nat\",\n                               \"Chonburi\" = \"Chon Buri\",\n                               \"Lopburi\" = \"Lop Buri\",\n                               \"Nong Bua Lamphu\" = \"Nong Bua Lam Phu\",\n                               \"Phang Nga\" = \"Phangnga\",\n                               \"Prachinburi\" = \"Prachin Buri\",\n                               \"Sisaket\" = \"Si Sa Ket\"))\n\nsummary(tourism_df_pivot)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n province_eng        region_eng        time_period         month_number \n Length:3850        Length:3850        Length:3850        Min.   : 1.0  \n Class :character   Class :character   Class :character   1st Qu.: 3.0  \n Mode  :character   Mode  :character   Mode  :character   Median : 6.0  \n                                                          Mean   : 6.3  \n                                                          3rd Qu.: 9.0  \n                                                          Max.   :12.0  \n                                                                        \n  month_factor       year         date_int      ratio_tourist_stay\n Jan    : 385   Min.   :2019   Min.   :201901   Min.   : 0.00     \n Feb    : 385   1st Qu.:2020   1st Qu.:202001   1st Qu.:20.18     \n Mar    : 308   Median :2021   Median :202102   Median :41.81     \n Apr    : 308   Mean   :2021   Mean   :202066   Mean   :38.93     \n May    : 308   3rd Qu.:2022   3rd Qu.:202202   3rd Qu.:56.20     \n Jun    : 308   Max.   :2023   Max.   :202302   Max.   :95.86     \n (Other):1848                                                     \n no_tourist_stay   no_tourist_all    no_tourist_thai   no_tourist_foreign \n Min.   :      0   Min.   :      0   Min.   :      0   Min.   :      0.0  \n 1st Qu.:  16271   1st Qu.:  39092   1st Qu.:  37169   1st Qu.:     49.2  \n Median :  44579   Median :  92122   Median :  88782   Median :    553.0  \n Mean   : 105161   Mean   : 206328   Mean   : 173962   Mean   :  32366.1  \n 3rd Qu.:  90902   3rd Qu.: 203646   3rd Qu.: 184256   3rd Qu.:   5189.5  \n Max.   :3335728   Max.   :6131044   Max.   :4087756   Max.   :2473725.0  \n                                                                          \n  revenue_all         revenue_thai       revenue_foreign     \n Min.   :0.000e+00   Min.   :0.000e+00   Min.   :-4.250e+03  \n 1st Qu.:6.332e+07   1st Qu.:5.925e+07   1st Qu.: 1.100e+05  \n Median :1.955e+08   Median :1.773e+08   Median : 1.540e+06  \n Mean   :1.344e+09   Mean   :6.636e+08   Mean   : 6.802e+08  \n 3rd Qu.:5.060e+08   3rd Qu.:4.600e+08   3rd Qu.: 1.742e+07  \n Max.   :1.103e+11   Max.   :4.506e+10   Max.   : 8.503e+10  \n                                                             \n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n\nFrom the outdated data dictionary in Kaggle and Piazza discussions, we can infer that this should be the intended data dictionary for dataset v2.\n\n| Variable           | Definition                                                        |\n|--------------------|-------------------------------------------------------------------|\n| no_tourist_all     | Total number of tourists who visited the province                 |\n| no_tourist_foreign | Number of Foreign tourists who visited the province               |\n| no_tourist_thai    | Number of Thai tourists who visited the province                  |\n| no_tourist_stay    | Number of Tourists who stayed overnight in the province**         |\n| ratio_tourist_stay | Ratio of Tourists who stayed overnight**                          |\n| revenue_all        | Revenue generated by all tourists in the province (Thai Baht)     |\n| revenue_foreign    | Revenue generated by Foreign tourists in the province (Thai Baht) |\n| revenue_thai       | Revenue generated by Thai tourists in the province (Thai Baht)    |\n\nFrom this, we can notice that are several imposible values such as foreign revenue from the summary output above.\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnegative_revenue <- tourism_df_pivot %>%\n  filter(revenue_foreign < 0)\n\ndatatable(negative_revenue)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1b4ff99564eb6e8884a5\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1b4ff99564eb6e8884a5\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\"],[\"Nakhon Pathom\",\"Nakhon Pathom\"],[\"bmr\",\"bmr\"],[\"covid\",\"covid\"],[7,8],[\"Jul\",\"Aug\"],[2021,2021],[202107,202108],[1.15,0.76],[1281,859],[4047,2714],[4047,2714],[0,0],[4015750,2625750],[4020000,2630000],[-4250,-4250]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>province_eng<\\/th>\\n      <th>region_eng<\\/th>\\n      <th>time_period<\\/th>\\n      <th>month_number<\\/th>\\n      <th>month_factor<\\/th>\\n      <th>year<\\/th>\\n      <th>date_int<\\/th>\\n      <th>ratio_tourist_stay<\\/th>\\n      <th>no_tourist_stay<\\/th>\\n      <th>no_tourist_all<\\/th>\\n      <th>no_tourist_thai<\\/th>\\n      <th>no_tourist_foreign<\\/th>\\n      <th>revenue_all<\\/th>\\n      <th>revenue_thai<\\/th>\\n      <th>revenue_foreign<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[4,6,7,8,9,10,11,12,13,14,15]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"province_eng\",\"targets\":1},{\"name\":\"region_eng\",\"targets\":2},{\"name\":\"time_period\",\"targets\":3},{\"name\":\"month_number\",\"targets\":4},{\"name\":\"month_factor\",\"targets\":5},{\"name\":\"year\",\"targets\":6},{\"name\":\"date_int\",\"targets\":7},{\"name\":\"ratio_tourist_stay\",\"targets\":8},{\"name\":\"no_tourist_stay\",\"targets\":9},{\"name\":\"no_tourist_all\",\"targets\":10},{\"name\":\"no_tourist_thai\",\"targets\":11},{\"name\":\"no_tourist_foreign\",\"targets\":12},{\"name\":\"revenue_all\",\"targets\":13},{\"name\":\"revenue_thai\",\"targets\":14},{\"name\":\"revenue_foreign\",\"targets\":15}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n# check_revenue_computation<- tourism_df_pivot %>%\n#  filter(revenue_all != (revenue_foreign+ revenue_thai))\n\n# datatable(check_revenue_computation)\n```\n:::\n\n\n\nWe noticed that `revenue_all` is indeed sum of `revenue_thai` and `revenue_foreign`. However, when `revenue_thai` is higher than `revenue_all`, the data records negative values for `revenue_foreign` to balance the equation. This is likely due to data entry error. Thus, we will take the conservative approach and cap `revenue_thai` at `revenue_all` if it exceeds the total, and set `revenue_foreign` to 0 if negative:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_df_pivot <- tourism_df_pivot %>%\n  mutate(\n    # Cap revenue_thai to revenue_all if revenue_thai is greater\n    revenue_thai = ifelse(revenue_thai > revenue_all, revenue_all, revenue_thai),\n    \n    # Set revenue_foreign to 0 if it's negative\n    revenue_foreign = ifelse(revenue_foreign < 0, 0, revenue_foreign)\n  )\n```\n:::\n\n\n\nSimilarly, we also ensure that `no_tourist_stay` does not exceed `no_tourist_all`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#check_tourist_stay <- tourism_df_pivot %>%\n#  filter(no_tourist_stay != no_tourist_all)\n#check_tourist_stay <- tourism_df_pivot %>%\n#  filter(no_tourist_stay <= no_tourist_all)\n\ncheck_tourist_stay <- tourism_df_pivot %>%\n  filter(no_tourist_stay > no_tourist_all)\n\ndatatable(check_tourist_stay)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-8f836166d559454ecd73\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8f836166d559454ecd73\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[\"Trat\",\"Chiang Mai\",\"Chon Buri\",\"Yala\",\"Chanthaburi\",\"Samut Sakhon\"],[\"east\",\"north\",\"east\",\"south\",\"east\",\"bmr\"],[\"covid\",\"covid\",\"covid\",\"covid\",\"covid\",\"covid\"],[3,5,6,8,8,12],[\"Mar\",\"May\",\"Jun\",\"Aug\",\"Aug\",\"Dec\"],[2020,2020,2020,2020,2021,2020],[202003,202005,202006,202008,202108,202012],[25.13,1.73,23.67,18.63,10.81,6.76],[77163,16125,295090,20592,18148,8509],[72217,12212,211505,13742,17881,5132],[51632,11629,194406,13742,17815,5071],[20585,583,17099,0,66,61],[589320000,98880000,1291300000,42860000,49440000,8960000],[289690000,83390000,895640000,42860000,49290000,8880000],[299630000,15490000,395660000,0,150000,80000]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>province_eng<\\/th>\\n      <th>region_eng<\\/th>\\n      <th>time_period<\\/th>\\n      <th>month_number<\\/th>\\n      <th>month_factor<\\/th>\\n      <th>year<\\/th>\\n      <th>date_int<\\/th>\\n      <th>ratio_tourist_stay<\\/th>\\n      <th>no_tourist_stay<\\/th>\\n      <th>no_tourist_all<\\/th>\\n      <th>no_tourist_thai<\\/th>\\n      <th>no_tourist_foreign<\\/th>\\n      <th>revenue_all<\\/th>\\n      <th>revenue_thai<\\/th>\\n      <th>revenue_foreign<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[4,6,7,8,9,10,11,12,13,14,15]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"province_eng\",\"targets\":1},{\"name\":\"region_eng\",\"targets\":2},{\"name\":\"time_period\",\"targets\":3},{\"name\":\"month_number\",\"targets\":4},{\"name\":\"month_factor\",\"targets\":5},{\"name\":\"year\",\"targets\":6},{\"name\":\"date_int\",\"targets\":7},{\"name\":\"ratio_tourist_stay\",\"targets\":8},{\"name\":\"no_tourist_stay\",\"targets\":9},{\"name\":\"no_tourist_all\",\"targets\":10},{\"name\":\"no_tourist_thai\",\"targets\":11},{\"name\":\"no_tourist_foreign\",\"targets\":12},{\"name\":\"revenue_all\",\"targets\":13},{\"name\":\"revenue_thai\",\"targets\":14},{\"name\":\"revenue_foreign\",\"targets\":15}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nFinally, we executed the remaining steps mentioned earlier in this section.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_df_pivot <- tourism_df_pivot %>%\n  mutate(\n    # Cap revenue_thai to revenue_all if revenue_thai is greater\n    revenue_thai = ifelse(revenue_thai > revenue_all, revenue_all, revenue_thai),\n    # Set revenue_foreign to 0 if it's negative\n    revenue_foreign = ifelse(revenue_foreign < 0, 0, revenue_foreign),\n    # Cap no_tourist_stay to no_tourist_all if no_tourist_stay is greater\n    no_tourist_stay = ifelse(no_tourist_stay > no_tourist_all, no_tourist_all, no_tourist_stay)\n  )\n\nsummary(tourism_df_pivot)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n province_eng        region_eng        time_period         month_number \n Length:3850        Length:3850        Length:3850        Min.   : 1.0  \n Class :character   Class :character   Class :character   1st Qu.: 3.0  \n Mode  :character   Mode  :character   Mode  :character   Median : 6.0  \n                                                          Mean   : 6.3  \n                                                          3rd Qu.: 9.0  \n                                                          Max.   :12.0  \n                                                                        \n  month_factor       year         date_int      ratio_tourist_stay\n Jan    : 385   Min.   :2019   Min.   :201901   Min.   : 0.00     \n Feb    : 385   1st Qu.:2020   1st Qu.:202001   1st Qu.:20.18     \n Mar    : 308   Median :2021   Median :202102   Median :41.81     \n Apr    : 308   Mean   :2021   Mean   :202066   Mean   :38.93     \n May    : 308   3rd Qu.:2022   3rd Qu.:202202   3rd Qu.:56.20     \n Jun    : 308   Max.   :2023   Max.   :202302   Max.   :95.86     \n (Other):1848                                                     \n no_tourist_stay   no_tourist_all    no_tourist_thai   no_tourist_foreign \n Min.   :      0   Min.   :      0   Min.   :      0   Min.   :      0.0  \n 1st Qu.:  16259   1st Qu.:  39092   1st Qu.:  37169   1st Qu.:     49.2  \n Median :  44579   Median :  92122   Median :  88782   Median :    553.0  \n Mean   : 105134   Mean   : 206328   Mean   : 173962   Mean   :  32366.1  \n 3rd Qu.:  90902   3rd Qu.: 203646   3rd Qu.: 184256   3rd Qu.:   5189.5  \n Max.   :3335728   Max.   :6131044   Max.   :4087756   Max.   :2473725.0  \n                                                                          \n  revenue_all         revenue_thai       revenue_foreign    \n Min.   :0.000e+00   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:6.332e+07   1st Qu.:5.925e+07   1st Qu.:1.100e+05  \n Median :1.955e+08   Median :1.773e+08   Median :1.540e+06  \n Mean   :1.344e+09   Mean   :6.636e+08   Mean   :6.802e+08  \n 3rd Qu.:5.060e+08   3rd Qu.:4.600e+08   3rd Qu.:1.742e+07  \n Max.   :1.103e+11   Max.   :4.506e+10   Max.   :8.503e+10  \n                                                            \n```\n\n\n:::\n:::\n\n\n\n### Feature Engineering\n\nFrom the data dictionary above,  we observe that some are related. For example, `revenue_all` is the sum of `revenue_foreign` and `revenue_thai`. \n\nLet's create some additional features to aid our analysis:\n\n| Variable                  | Formula                                                   | Definition                                                                                   |\n|---------------------------|-----------------------------------------------------------|----------------------------------------------------------------------------------------------|\n| `ratio_tourist_foreign`    | `no_tourist_foreign / no_tourist_all`                     | Proportion of total tourists who are foreign                                                  |\n| `ratio_tourist_thai`       | `no_tourist_thai / no_tourist_all`                        | Proportion of total tourists who are Thai                                                     |\n| `ratio_revenue_foreign`    | `revenue_foreign / revenue_all`                           | Proportion of total revenue generated by foreign tourists                                     |\n| `ratio_revenue_thai`       | `revenue_thai / revenue_all`                              | Proportion of total revenue generated by Thai tourists                                        |\n| `avg_revenue_all`          | `revenue_all / no_tourist_all`                            | Average revenue generated per tourist (both Thai and foreign)                                 |\n| `avg_revenue_foreign`      | `revenue_foreign / no_tourist_foreign`                    | Average revenue generated per foreign tourist                                                 |\n| `avg_revenue_thai`         | `revenue_thai / no_tourist_thai`                          | Average revenue generated per Thai tourist                                                    |\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_df_ft <- tourism_df_pivot %>%\n  mutate(\n    # ratio tourist\n    ratio_tourist_foreign = ifelse(no_tourist_all == 0, 0, no_tourist_foreign / no_tourist_all),    \n    ratio_tourist_thai = ifelse(no_tourist_all == 0, 0, no_tourist_thai / no_tourist_all),\n\n    # ratio revenue\n    ratio_revenue_thai = ifelse(revenue_all == 0, 0, revenue_thai / revenue_all),\n    ratio_revenue_foreign = ifelse(revenue_all == 0, 0, revenue_foreign / revenue_all),\n    \n    # average revenue per tourist\n    avg_revenue_all = ifelse(no_tourist_all == 0, 0, revenue_all / no_tourist_all),\n    avg_revenue_thai = ifelse(no_tourist_thai == 0, 0, revenue_thai / no_tourist_thai),\n    avg_revenue_foreign = ifelse(no_tourist_foreign == 0, 0, revenue_foreign / no_tourist_foreign),\n  )\n\nsummary(tourism_df_ft)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n province_eng        region_eng        time_period         month_number \n Length:3850        Length:3850        Length:3850        Min.   : 1.0  \n Class :character   Class :character   Class :character   1st Qu.: 3.0  \n Mode  :character   Mode  :character   Mode  :character   Median : 6.0  \n                                                          Mean   : 6.3  \n                                                          3rd Qu.: 9.0  \n                                                          Max.   :12.0  \n                                                                        \n  month_factor       year         date_int      ratio_tourist_stay\n Jan    : 385   Min.   :2019   Min.   :201901   Min.   : 0.00     \n Feb    : 385   1st Qu.:2020   1st Qu.:202001   1st Qu.:20.18     \n Mar    : 308   Median :2021   Median :202102   Median :41.81     \n Apr    : 308   Mean   :2021   Mean   :202066   Mean   :38.93     \n May    : 308   3rd Qu.:2022   3rd Qu.:202202   3rd Qu.:56.20     \n Jun    : 308   Max.   :2023   Max.   :202302   Max.   :95.86     \n (Other):1848                                                     \n no_tourist_stay   no_tourist_all    no_tourist_thai   no_tourist_foreign \n Min.   :      0   Min.   :      0   Min.   :      0   Min.   :      0.0  \n 1st Qu.:  16259   1st Qu.:  39092   1st Qu.:  37169   1st Qu.:     49.2  \n Median :  44579   Median :  92122   Median :  88782   Median :    553.0  \n Mean   : 105134   Mean   : 206328   Mean   : 173962   Mean   :  32366.1  \n 3rd Qu.:  90902   3rd Qu.: 203646   3rd Qu.: 184256   3rd Qu.:   5189.5  \n Max.   :3335728   Max.   :6131044   Max.   :4087756   Max.   :2473725.0  \n                                                                          \n  revenue_all         revenue_thai       revenue_foreign    \n Min.   :0.000e+00   Min.   :0.000e+00   Min.   :0.000e+00  \n 1st Qu.:6.332e+07   1st Qu.:5.925e+07   1st Qu.:1.100e+05  \n Median :1.955e+08   Median :1.773e+08   Median :1.540e+06  \n Mean   :1.344e+09   Mean   :6.636e+08   Mean   :6.802e+08  \n 3rd Qu.:5.060e+08   3rd Qu.:4.600e+08   3rd Qu.:1.742e+07  \n Max.   :1.103e+11   Max.   :4.506e+10   Max.   :8.503e+10  \n                                                            \n ratio_tourist_foreign ratio_tourist_thai ratio_revenue_thai\n Min.   :0.0000000     Min.   :0.0000     Min.   :0.0000    \n 1st Qu.:0.0008535     1st Qu.:0.9627     1st Qu.:0.9511    \n Median :0.0066240     Median :0.9932     Median :0.9911    \n Mean   :0.0637772     Mean   :0.9297     Mean   :0.9090    \n 3rd Qu.:0.0346323     3rd Qu.:0.9990     3rd Qu.:0.9988    \n Max.   :1.0000000     Max.   :1.0000     Max.   :1.0000    \n                                                            \n ratio_revenue_foreign avg_revenue_all  avg_revenue_thai avg_revenue_foreign\n Min.   :0.000000      Min.   :     0   Min.   :    0    Min.   :    0      \n 1st Qu.:0.001126      1st Qu.:  1366   1st Qu.: 1345    1st Qu.: 1294      \n Median :0.008700      Median :  1932   Median : 1880    Median : 2372      \n Mean   :0.084802      Mean   :  3513   Mean   : 2614    Mean   : 4504      \n 3rd Qu.:0.045997      3rd Qu.:  3199   3rd Qu.: 3082    3rd Qu.: 4137      \n Max.   :1.000000      Max.   :300000   Max.   :17325    Max.   :65000      \n                                                                            \n```\n\n\n:::\n:::\n\n\n\n### Combining Datasets\n\nAfter all the data cleaning and feature engineering steps, we can merge the aspatial dataset with the geospatial dataset.\n\nWe will select the relevant columns from the admin boundary and combine the two dataset with the common column which is `province_eng` for their respective datasets.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmin_boundary <- admin_boundary%>%\n  select(1:3, 17)\n\ntourism <- left_join(admin_boundary, tourism_df_ft, by = c(\"province_eng\"))\n```\n:::\n\n\n\nThe combined dataset is saved for future analysis. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(tourism, \"data/rds/tourism.rds\")\n```\n:::\n\n\n\n> This `tourism` object forms the tourism economy indicators layer within the study area in sf polygon features.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism <- read_rds(\"data/rds/tourism.rds\")\n```\n:::\n\n\n\n\n### Exploratory Data Analysis (EDA)\n\nIn this section, we will perform Exploratory Data Analysis to understand data better and **derive the important indictators of tourism economy of Thailand** for further geospatial analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntourists_by_year_type <- tourism_df_ft %>%\n  group_by(year) %>%\n  summarize(\n    total_thai = sum(no_tourist_thai, na.rm = TRUE),\n    total_foreign = sum(no_tourist_foreign, na.rm = TRUE),\n    total_all = sum(no_tourist_all, na.rm = TRUE)\n  ) %>%\n  ungroup()\n\ntourists_by_year_long <- tourists_by_year_type %>%\n  pivot_longer(cols = c(total_thai, total_foreign), names_to = \"tourist_type\", values_to = \"total_tourists\")\n\n# create stacked bar chart with trendline\nfig_tourists_by_year <- plot_ly() %>%\n  add_trace(\n    data = tourists_by_year_long %>% filter(tourist_type == \"total_thai\"),\n    x = ~year,\n    y = ~total_tourists,\n    name = \"Thai Tourists\",\n    type = 'bar',\n    hoverinfo = 'text',\n    marker = list(color = 'dodgerblue2')\n  ) %>%\n  add_trace(\n    data = tourists_by_year_long %>% filter(tourist_type == \"total_foreign\"),\n    x = ~year,\n    y = ~total_tourists,\n    name = \"Foreign Tourists\",\n    type = 'bar',\n    hoverinfo = 'text',\n    marker = list(color = 'sienna3')\n  ) %>%\n  # Add trendline for total tourists\n  add_trace(\n    data = tourists_by_year_type,\n    x = ~year,\n    y = ~total_all,\n    type = 'scatter',\n    mode = 'lines+markers',\n    line = list(color = 'black', dash = 'dash'),\n    marker = list(color = 'black', size = 6),\n    name = 'Total Tourists Trend'\n  ) %>%\n  layout(\n    barmode = 'stack',\n    title = \"Distribution of Local and Foreign Tourists Over Time\",\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = \"Number of Tourists\"),\n    legend = list(title = list(text = \"Tourist Type\"))\n  )\n\nfig_tourists_by_year\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-0d7db73d03839427d3b7\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0d7db73d03839427d3b7\">{\"x\":{\"visdat\":{\"14757262855ad\":[\"function () \",\"plotlyVisDat\"],\"147572210e46d\":[\"function () \",\"data\"],\"14757304c194\":[\"function () \",\"data\"],\"147572d40dd18\":[\"function () \",\"data\"]},\"cur_data\":\"147572d40dd18\",\"attrs\":{\"147572210e46d\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"name\":\"Thai Tourists\",\"type\":\"bar\",\"hoverinfo\":\"text\",\"marker\":{\"color\":\"dodgerblue2\"},\"inherit\":true},\"14757304c194\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"name\":\"Foreign Tourists\",\"type\":\"bar\",\"hoverinfo\":\"text\",\"marker\":{\"color\":\"sienna3\"},\"inherit\":true},\"147572d40dd18\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"type\":\"scatter\",\"mode\":\"lines+markers\",\"line\":{\"color\":\"black\",\"dash\":\"dash\"},\"marker\":{\"color\":\"black\",\"size\":6},\"name\":\"Total Tourists Trend\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"barmode\":\"stack\",\"title\":\"Distribution of Local and Foreign Tourists Over Time\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Year\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Number of Tourists\"},\"legend\":{\"title\":{\"text\":\"Tourist Type\"}},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[2019,2020,2021,2022,2023],\"y\":[229748960,123214821,71882281,202972521,41936533],\"name\":\"Thai Tourists\",\"type\":\"bar\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"marker\":{\"color\":\"dodgerblue2\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[77393030,13815291,1154289,21869247,10377725],\"name\":\"Foreign Tourists\",\"type\":\"bar\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"marker\":{\"color\":\"sienna3\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[307141990,137030112,73036570,224841768,52314258],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"line\":{\"color\":\"black\",\"dash\":\"dash\"},\"marker\":{\"color\":\"black\",\"size\":6,\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"name\":\"Total Tourists Trend\",\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n::: callout-note\n\n**Observations:**\n\n- The total number of tourists peaked in 2019, prior to the COVID-19 pandemic. Despite some recovery in 2022, **tourism levels have not returned to pre-pandemic levels**.\n- A sharp decline in tourism is evident between 2020 and 2021, likely driven by the **global impact of the COVID-19 pandemic** and related travel restrictions.\n- While there was a **partial recovery in 2022**, the total number of tourists still falls short of 2019 figures.\n- The **proportion of foreign tourists remains relatively low** across all years.\n\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Group data by year and summarize revenue for Thai, foreign, and all tourists\nrevenue_by_year_type <- tourism_df_ft %>%\n  st_drop_geometry() %>%\n  group_by(year) %>%\n  summarize(\n    total_revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    total_revenue_foreign = sum(revenue_foreign, na.rm = TRUE),\n    total_revenue_all = sum(revenue_all, na.rm = TRUE)\n  ) %>%\n  ungroup()\n\n# Reshape data for stacked bar chart\nrevenue_by_year_long <- revenue_by_year_type %>%\n  pivot_longer(cols = c(total_revenue_thai, total_revenue_foreign), \n               names_to = \"revenue_type\", \n               values_to = \"total_revenue\")\n\n# Create stacked bar chart with trendline for total revenue\nfig_revenue_by_year <- plot_ly() %>%\n  # Add trace for Thai tourist revenue (blue)\n  add_trace(\n    data = revenue_by_year_long %>% filter(revenue_type == \"total_revenue_thai\"),\n    x = ~year,\n    y = ~total_revenue,\n    name = \"Thai Tourist Revenue\",\n    type = 'bar',\n    hoverinfo = 'text',\n    marker = list(color = 'dodgerblue2')\n  ) %>%\n  # Add trace for Foreign tourist revenue (orange)\n  add_trace(\n    data = revenue_by_year_long %>% filter(revenue_type == \"total_revenue_foreign\"),\n    x = ~year,\n    y = ~total_revenue,\n    name = \"Foreign Tourist Revenue\",\n    type = 'bar',\n    hoverinfo = 'text',\n    marker = list(color = 'sienna3')\n  ) %>%\n  # Add trendline for total revenue\n  add_trace(\n    data = revenue_by_year_type,\n    x = ~year,\n    y = ~total_revenue_all,\n    type = 'scatter',\n    mode = 'lines+markers',\n    line = list(color = 'black', dash = 'dash'),\n    marker = list(color = 'black', size = 6),\n    name = 'Total Revenue Trend'\n  ) %>%\n  layout(\n    barmode = 'stack',\n    title = \"Distribution of Revenue by Tourist Type Over Time\",\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = \"Revenue (Thai Baht)\"),\n    legend = list(title = list(text = \"Revenue Type\"))\n  )\n\nfig_revenue_by_year\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-c2e3fede5c798441fdae\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c2e3fede5c798441fdae\">{\"x\":{\"visdat\":{\"14757242b6c83\":[\"function () \",\"plotlyVisDat\"],\"147571ee11f02\":[\"function () \",\"data\"],\"147574dbacc24\":[\"function () \",\"data\"],\"1475722b0775a\":[\"function () \",\"data\"]},\"cur_data\":\"1475722b0775a\",\"attrs\":{\"147571ee11f02\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"name\":\"Thai Tourist Revenue\",\"type\":\"bar\",\"hoverinfo\":\"text\",\"marker\":{\"color\":\"dodgerblue2\"},\"inherit\":true},\"147574dbacc24\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"name\":\"Foreign Tourist Revenue\",\"type\":\"bar\",\"hoverinfo\":\"text\",\"marker\":{\"color\":\"sienna3\"},\"inherit\":true},\"1475722b0775a\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"type\":\"scatter\",\"mode\":\"lines+markers\",\"line\":{\"color\":\"black\",\"dash\":\"dash\"},\"marker\":{\"color\":\"black\",\"size\":6},\"name\":\"Total Revenue Trend\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"barmode\":\"stack\",\"title\":\"Distribution of Revenue by Tourist Type Over Time\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Year\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Revenue (Thai Baht)\"},\"legend\":{\"title\":{\"text\":\"Revenue Type\"}},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[2019,2020,2021,2022,2023],\"y\":[1081759090000,482468090000,216375911500,641554190000,132870620000],\"name\":\"Thai Tourist Revenue\",\"type\":\"bar\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"marker\":{\"color\":\"dodgerblue2\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[1646144750000,310066120000,24974314700,443021080000,194687670000],\"name\":\"Foreign Tourist Revenue\",\"type\":\"bar\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"marker\":{\"color\":\"sienna3\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[2727903840000,792534210000,241350226200,1084575270000,327558290000],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"line\":{\"color\":\"black\",\"dash\":\"dash\"},\"marker\":{\"color\":\"black\",\"size\":6,\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"name\":\"Total Revenue Trend\",\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations (Comparing with revenue distribution with earlier tourist distribution plot):**\n\n- In both cases, **2019** represents the peak for both tourist numbers and revenue. However, **foreign tourists contribute more significantly to revenue than their proportion of total tourists**, meaning that foreign tourists tend to spend more on average than local tourists.\n- The drop in both **tourist numbers** and **revenue** follows a similar pattern during the 2020-2022 pandemic.\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Summarize total revenue by year and province\nrevenue_by_year_province <- tourism_df_ft %>%\n  group_by(year, province_eng) %>%\n  summarize(\n    total_revenue_all = sum(revenue_all, na.rm = TRUE)\n  ) %>%\n  ungroup()\n\n# Calculate the proportion (percent) of revenue by province for each year and reorder provinces by contribution\nrevenue_by_year_province <- revenue_by_year_province %>%\n  group_by(year) %>%\n  mutate(\n    total_revenue_year = sum(total_revenue_all, na.rm = TRUE),\n    percent_revenue = (total_revenue_all / total_revenue_year) * 100,\n    # Reorder provinces based on their revenue contribution for each year\n    province_eng = fct_reorder(province_eng, percent_revenue, .desc = TRUE)\n  ) %>%\n  ungroup()\n\n# Create stacked bar chart with percentages\nfig_revenue_by_year_province <- plot_ly() %>%\n  add_trace(\n    data = revenue_by_year_province,\n    x = ~year,\n    y = ~percent_revenue,\n    color = ~province_eng,\n    colors = brewer.pal(n = 12, \"Set3\"),\n    type = 'bar',\n    text = ~paste(province_eng, \": \", round(percent_revenue, 2), \"%\"),\n    hoverinfo = 'text',\n    name = ~province_eng,\n    marker = list(line = list(color = 'grey', width = 0.5))\n  ) %>%\n  layout(\n    barmode = 'stack',\n    title = \"Percentage Distribution of Revenue Over Time by Province\",\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = \"Revenue (%)\"),\n    legend = list(title = list(text = \"Province\"))\n  )\n\n# Show the plot\nfig_revenue_by_year_province\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-a77ad32f6b82562872f5\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a77ad32f6b82562872f5\">{\"x\":{\"visdat\":{\"14757cf6dda6\":[\"function () \",\"plotlyVisDat\"],\"147572351c3f0\":[\"function () \",\"data\"]},\"cur_data\":\"147572351c3f0\",\"attrs\":{\"147572351c3f0\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"color\":{},\"colors\":[\"#8DD3C7\",\"#FFFFB3\",\"#BEBADA\",\"#FB8072\",\"#80B1D3\",\"#FDB462\",\"#B3DE69\",\"#FCCDE5\",\"#D9D9D9\",\"#BC80BD\",\"#CCEBC5\",\"#FFED6F\"],\"type\":\"bar\",\"text\":{},\"hoverinfo\":\"text\",\"name\":{},\"marker\":{\"line\":{\"color\":\"grey\",\"width\":0.5}},\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"barmode\":\"stack\",\"title\":\"Percentage Distribution of Revenue Over Time by Province\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Year\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Revenue (%)\"},\"legend\":{\"title\":{\"text\":\"Province\"}},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[2019,2020,2021,2022,2023],\"y\":[39.144112939112986,32.142481269042001,25.978807224337292,31.438120472726617,36.861689563710939],\"type\":\"bar\",\"text\":[\"Bangkok :  39.14 %\",\"Bangkok :  32.14 %\",\"Bangkok :  25.98 %\",\"Bangkok :  31.44 %\",\"Bangkok :  36.86 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Bangkok\",\"marker\":{\"color\":\"rgba(141,211,199,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(141,211,199,1)\"},\"error_y\":{\"color\":\"rgba(141,211,199,1)\"},\"error_x\":{\"color\":\"rgba(141,211,199,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[16.235567526456503,13.685659070792667,8.8336772397854091,17.853696774775255,19.682008353383456],\"type\":\"bar\",\"text\":[\"Phuket :  16.24 %\",\"Phuket :  13.69 %\",\"Phuket :  8.83 %\",\"Phuket :  17.85 %\",\"Phuket :  19.68 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phuket\",\"marker\":{\"color\":\"rgba(160,217,196,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(160,217,196,1)\"},\"error_y\":{\"color\":\"rgba(160,217,196,1)\"},\"error_x\":{\"color\":\"rgba(160,217,196,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[10.129695040863316,7.8860229894681773,4.9423902300863061,9.1713837436105283,10.20654369639065],\"type\":\"bar\",\"text\":[\"Chon Buri :  10.13 %\",\"Chon Buri :  7.89 %\",\"Chon Buri :  4.94 %\",\"Chon Buri :  9.17 %\",\"Chon Buri :  10.21 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Chon Buri\",\"marker\":{\"color\":\"rgba(178,224,194,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(178,224,194,1)\"},\"error_y\":{\"color\":\"rgba(178,224,194,1)\"},\"error_x\":{\"color\":\"rgba(178,224,194,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[4.1077511002000717,3.6631428187812864,1.8621113685121544,1.4693807281812723,1.3084877198498013],\"type\":\"bar\",\"text\":[\"Krabi :  4.11 %\",\"Krabi :  3.66 %\",\"Krabi :  1.86 %\",\"Krabi :  1.47 %\",\"Krabi :  1.31 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Krabi\",\"marker\":{\"color\":\"rgba(195,230,191,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(195,230,191,1)\"},\"error_y\":{\"color\":\"rgba(195,230,191,1)\"},\"error_x\":{\"color\":\"rgba(195,230,191,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[4.0569732839263128,6.2888174883958632,9.650394933004625,5.5027273487436235,5.0561596227651568],\"type\":\"bar\",\"text\":[\"Chiang Mai :  4.06 %\",\"Chiang Mai :  6.29 %\",\"Chiang Mai :  9.65 %\",\"Chiang Mai :  5.5 %\",\"Chiang Mai :  5.06 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Chiang Mai\",\"marker\":{\"color\":\"rgba(211,236,188,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(211,236,188,1)\"},\"error_y\":{\"color\":\"rgba(211,236,188,1)\"},\"error_x\":{\"color\":\"rgba(211,236,188,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[3.4563945626470471,3.058872373471424,1.1324497362331454,2.550385461029367,2.1279785042228667],\"type\":\"bar\",\"text\":[\"Surat Thani :  3.46 %\",\"Surat Thani :  3.06 %\",\"Surat Thani :  1.13 %\",\"Surat Thani :  2.55 %\",\"Surat Thani :  2.13 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Surat Thani\",\"marker\":{\"color\":\"rgba(226,243,185,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(226,243,185,1)\"},\"error_y\":{\"color\":\"rgba(226,243,185,1)\"},\"error_x\":{\"color\":\"rgba(226,243,185,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[2.4328394214951508,2.8857505091168241,1.3483766107197459,1.4511818990672727,1.2620410248203457],\"type\":\"bar\",\"text\":[\"Songkhla :  2.43 %\",\"Songkhla :  2.89 %\",\"Songkhla :  1.35 %\",\"Songkhla :  1.45 %\",\"Songkhla :  1.26 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Songkhla\",\"marker\":{\"color\":\"rgba(241,249,182,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(241,249,182,1)\"},\"error_y\":{\"color\":\"rgba(241,249,182,1)\"},\"error_x\":{\"color\":\"rgba(241,249,182,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[1.8954047881687794,1.4798805972047566,1.1394644385877106,0.56199511169012728,0.53361494835010892],\"type\":\"bar\",\"text\":[\"Phangnga :  1.9 %\",\"Phangnga :  1.48 %\",\"Phangnga :  1.14 %\",\"Phangnga :  0.56 %\",\"Phangnga :  0.53 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phangnga\",\"marker\":{\"color\":\"rgba(254,254,180,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(254,254,180,1)\"},\"error_y\":{\"color\":\"rgba(254,254,180,1)\"},\"error_x\":{\"color\":\"rgba(254,254,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[1.5540368167816354,2.273821088429735,4.363265021874672,3.0277400663948386,2.2606510737371357],\"type\":\"bar\",\"text\":[\"Prachuap Khiri Khan :  1.55 %\",\"Prachuap Khiri Khan :  2.27 %\",\"Prachuap Khiri Khan :  4.36 %\",\"Prachuap Khiri Khan :  3.03 %\",\"Prachuap Khiri Khan :  2.26 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Prachuap Khiri Khan\",\"marker\":{\"color\":\"rgba(246,244,186,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(246,244,186,1)\"},\"error_y\":{\"color\":\"rgba(246,244,186,1)\"},\"error_x\":{\"color\":\"rgba(246,244,186,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[1.3593290737110439,1.5852047572810768,1.6259069078925108,0.89264067398475722,0.87033364351731102],\"type\":\"bar\",\"text\":[\"Rayong :  1.36 %\",\"Rayong :  1.59 %\",\"Rayong :  1.63 %\",\"Rayong :  0.89 %\",\"Rayong :  0.87 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Rayong\",\"marker\":{\"color\":\"rgba(237,234,192,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(237,234,192,1)\"},\"error_y\":{\"color\":\"rgba(237,234,192,1)\"},\"error_x\":{\"color\":\"rgba(237,234,192,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[1.137664368697102,1.819961815906975,3.7160147480317547,2.2492353158670122,1.5120453828233138],\"type\":\"bar\",\"text\":[\"Phetchaburi :  1.14 %\",\"Phetchaburi :  1.82 %\",\"Phetchaburi :  3.72 %\",\"Phetchaburi :  2.25 %\",\"Phetchaburi :  1.51 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phetchaburi\",\"marker\":{\"color\":\"rgba(228,224,198,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(228,224,198,1)\"},\"error_y\":{\"color\":\"rgba(228,224,198,1)\"},\"error_x\":{\"color\":\"rgba(228,224,198,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[1.0737808851795891,1.8862971227450231,3.2932100893966343,3.172972033559275,2.7338859291273012],\"type\":\"bar\",\"text\":[\"Chiang Rai :  1.07 %\",\"Chiang Rai :  1.89 %\",\"Chiang Rai :  3.29 %\",\"Chiang Rai :  3.17 %\",\"Chiang Rai :  2.73 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Chiang Rai\",\"marker\":{\"color\":\"rgba(219,214,203,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(219,214,203,1)\"},\"error_y\":{\"color\":\"rgba(219,214,203,1)\"},\"error_x\":{\"color\":\"rgba(219,214,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[1.0221738607912221,1.9200433000866928,3.5150288166583041,1.9804886386539127,1.4668259502759036],\"type\":\"bar\",\"text\":[\"Kanchanaburi :  1.02 %\",\"Kanchanaburi :  1.92 %\",\"Kanchanaburi :  3.52 %\",\"Kanchanaburi :  1.98 %\",\"Kanchanaburi :  1.47 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Kanchanaburi\",\"marker\":{\"color\":\"rgba(209,204,209,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(209,204,209,1)\"},\"error_y\":{\"color\":\"rgba(209,204,209,1)\"},\"error_x\":{\"color\":\"rgba(209,204,209,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.90707376254142458,1.5992735506016831,2.4059849006265401,0.92613765755510913,0.66903817332786786],\"type\":\"bar\",\"text\":[\"Nakhon Ratchasima :  0.91 %\",\"Nakhon Ratchasima :  1.6 %\",\"Nakhon Ratchasima :  2.41 %\",\"Nakhon Ratchasima :  0.93 %\",\"Nakhon Ratchasima :  0.67 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nakhon Ratchasima\",\"marker\":{\"color\":\"rgba(199,194,214,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(199,194,214,1)\"},\"error_y\":{\"color\":\"rgba(199,194,214,1)\"},\"error_x\":{\"color\":\"rgba(199,194,214,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.72266953515487553,1.0252882332991027,1.4922629477941629,0.81178966951735865,0.61383578476978862],\"type\":\"bar\",\"text\":[\"Trat :  0.72 %\",\"Trat :  1.03 %\",\"Trat :  1.49 %\",\"Trat :  0.81 %\",\"Trat :  0.61 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Trat\",\"marker\":{\"color\":\"rgba(193,185,215,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(193,185,215,1)\"},\"error_y\":{\"color\":\"rgba(193,185,215,1)\"},\"error_x\":{\"color\":\"rgba(193,185,215,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.7021479173547408,0.77649771105779775,1.5477010561840527,1.1032752019138332,0.84772087435185961],\"type\":\"bar\",\"text\":[\"Phra Nakhon Si Ayutthaya :  0.7 %\",\"Phra Nakhon Si Ayutthaya :  0.78 %\",\"Phra Nakhon Si Ayutthaya :  1.55 %\",\"Phra Nakhon Si Ayutthaya :  1.1 %\",\"Phra Nakhon Si Ayutthaya :  0.85 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phra Nakhon Si Ayutthaya\",\"marker\":{\"color\":\"rgba(205,177,200,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(205,177,200,1)\"},\"error_y\":{\"color\":\"rgba(205,177,200,1)\"},\"error_x\":{\"color\":\"rgba(205,177,200,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.66392662873336472,1.096439736020985,1.3057166134116514,0.87253602970312982,0.55728707095155494],\"type\":\"bar\",\"text\":[\"Khon Kaen :  0.66 %\",\"Khon Kaen :  1.1 %\",\"Khon Kaen :  1.31 %\",\"Khon Kaen :  0.87 %\",\"Khon Kaen :  0.56 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Khon Kaen\",\"marker\":{\"color\":\"rgba(216,169,184,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(216,169,184,1)\"},\"error_y\":{\"color\":\"rgba(216,169,184,1)\"},\"error_x\":{\"color\":\"rgba(216,169,184,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.58638430598052171,1.0368927796820278,1.1480370429418723,0.51644732780971492,0.39033358001716273],\"type\":\"bar\",\"text\":[\"Nakhon Si Thammarat :  0.59 %\",\"Nakhon Si Thammarat :  1.04 %\",\"Nakhon Si Thammarat :  1.15 %\",\"Nakhon Si Thammarat :  0.52 %\",\"Nakhon Si Thammarat :  0.39 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nakhon Si Thammarat\",\"marker\":{\"color\":\"rgba(225,161,169,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(225,161,169,1)\"},\"error_y\":{\"color\":\"rgba(225,161,169,1)\"},\"error_x\":{\"color\":\"rgba(225,161,169,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.41883661119081095,0.71821883878047366,0.87723969988970329,0.55811525188104272,0.44464147129355208],\"type\":\"bar\",\"text\":[\"Udon Thani :  0.42 %\",\"Udon Thani :  0.72 %\",\"Udon Thani :  0.88 %\",\"Udon Thani :  0.56 %\",\"Udon Thani :  0.44 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Udon Thani\",\"marker\":{\"color\":\"rgba(233,152,154,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(233,152,154,1)\"},\"error_y\":{\"color\":\"rgba(233,152,154,1)\"},\"error_x\":{\"color\":\"rgba(233,152,154,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.35050172443028638,0.50560593466369097,0.557136415892864,0.33526303803700042,0.21517086317674938],\"type\":\"bar\",\"text\":[\"Trang :  0.35 %\",\"Trang :  0.51 %\",\"Trang :  0.56 %\",\"Trang :  0.34 %\",\"Trang :  0.22 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Trang\",\"marker\":{\"color\":\"rgba(241,144,139,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(241,144,139,1)\"},\"error_y\":{\"color\":\"rgba(241,144,139,1)\"},\"error_x\":{\"color\":\"rgba(241,144,139,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.33868899132456226,0.61138938090760775,0.77602993354890837,0.55064689055652172,0.34444556417729499],\"type\":\"bar\",\"text\":[\"Satun :  0.34 %\",\"Satun :  0.61 %\",\"Satun :  0.78 %\",\"Satun :  0.55 %\",\"Satun :  0.34 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Satun\",\"marker\":{\"color\":\"rgba(247,135,125,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(247,135,125,1)\"},\"error_y\":{\"color\":\"rgba(247,135,125,1)\"},\"error_x\":{\"color\":\"rgba(247,135,125,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.31943354718837891,0.55652739583317168,0.84759398497717253,0.4217521942944541,0.53868274864910304],\"type\":\"bar\",\"text\":[\"Chanthaburi :  0.32 %\",\"Chanthaburi :  0.56 %\",\"Chanthaburi :  0.85 %\",\"Chanthaburi :  0.42 %\",\"Chanthaburi :  0.54 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Chanthaburi\",\"marker\":{\"color\":\"rgba(248,130,118,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(248,130,118,1)\"},\"error_y\":{\"color\":\"rgba(248,130,118,1)\"},\"error_x\":{\"color\":\"rgba(248,130,118,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.31361149445795716,0.57965825853750841,0.93334488865707965,0.56938971142131978,0.44583209907464105],\"type\":\"bar\",\"text\":[\"Phitsanulok :  0.31 %\",\"Phitsanulok :  0.58 %\",\"Phitsanulok :  0.93 %\",\"Phitsanulok :  0.57 %\",\"Phitsanulok :  0.45 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phitsanulok\",\"marker\":{\"color\":\"rgba(235,139,132,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(235,139,132,1)\"},\"error_y\":{\"color\":\"rgba(235,139,132,1)\"},\"error_x\":{\"color\":\"rgba(235,139,132,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.29317638997128287,0.43100347680890644,0.6207949433444534,0.26563301595471561,0.27851836691417575],\"type\":\"bar\",\"text\":[\"Ubon Ratchathani :  0.29 %\",\"Ubon Ratchathani :  0.43 %\",\"Ubon Ratchathani :  0.62 %\",\"Ubon Ratchathani :  0.27 %\",\"Ubon Ratchathani :  0.28 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Ubon Ratchathani\",\"marker\":{\"color\":\"rgba(222,147,145,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(222,147,145,1)\"},\"error_y\":{\"color\":\"rgba(222,147,145,1)\"},\"error_x\":{\"color\":\"rgba(222,147,145,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.28156601003941545,0.54107191158347601,0.89468737361390549,0.60810348367983713,0.52638264780292998],\"type\":\"bar\",\"text\":[\"Phetchabun :  0.28 %\",\"Phetchabun :  0.54 %\",\"Phetchabun :  0.89 %\",\"Phetchabun :  0.61 %\",\"Phetchabun :  0.53 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phetchabun\",\"marker\":{\"color\":\"rgba(206,154,159,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(206,154,159,1)\"},\"error_y\":{\"color\":\"rgba(206,154,159,1)\"},\"error_x\":{\"color\":\"rgba(206,154,159,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.28076392898072244,0.51286492730704969,0.4973809301530292,0.31642524912079179,0.18857101739052307],\"type\":\"bar\",\"text\":[\"Nakhon Nayok :  0.28 %\",\"Nakhon Nayok :  0.51 %\",\"Nakhon Nayok :  0.5 %\",\"Nakhon Nayok :  0.32 %\",\"Nakhon Nayok :  0.19 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nakhon Nayok\",\"marker\":{\"color\":\"rgba(190,161,173,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(190,161,173,1)\"},\"error_y\":{\"color\":\"rgba(190,161,173,1)\"},\"error_x\":{\"color\":\"rgba(190,161,173,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.27624177544322825,0.33885729677208509,0.40003691531655167,0.2922498869073421,0.1832620386435648],\"type\":\"bar\",\"text\":[\"Chumphon :  0.28 %\",\"Chumphon :  0.34 %\",\"Chumphon :  0.4 %\",\"Chumphon :  0.29 %\",\"Chumphon :  0.18 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Chumphon\",\"marker\":{\"color\":\"rgba(170,167,188,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(170,167,188,1)\"},\"error_y\":{\"color\":\"rgba(170,167,188,1)\"},\"error_x\":{\"color\":\"rgba(170,167,188,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.26736536284944706,0.47254237769748764,0.49329558076047081,0.4488061026875525,0.3983138390422053],\"type\":\"bar\",\"text\":[\"Tak :  0.27 %\",\"Tak :  0.47 %\",\"Tak :  0.49 %\",\"Tak :  0.45 %\",\"Tak :  0.4 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Tak\",\"marker\":{\"color\":\"rgba(146,173,202,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(146,173,202,1)\"},\"error_y\":{\"color\":\"rgba(146,173,202,1)\"},\"error_x\":{\"color\":\"rgba(146,173,202,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.25697496727010727,0.267033267876222,0.28568856588873581,0.31466972319957104,0.24344979942348582],\"type\":\"bar\",\"text\":[\"Samut Prakan :  0.26 %\",\"Samut Prakan :  0.27 %\",\"Samut Prakan :  0.29 %\",\"Samut Prakan :  0.31 %\",\"Samut Prakan :  0.24 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Samut Prakan\",\"marker\":{\"color\":\"rgba(139,177,205,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(139,177,205,1)\"},\"error_y\":{\"color\":\"rgba(139,177,205,1)\"},\"error_x\":{\"color\":\"rgba(139,177,205,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.24967448999228653,0.29558093145278863,0.63390535160807737,0.57011165301602351,0.37908672682349148],\"type\":\"bar\",\"text\":[\"Saraburi :  0.25 %\",\"Saraburi :  0.3 %\",\"Saraburi :  0.63 %\",\"Saraburi :  0.57 %\",\"Saraburi :  0.38 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Saraburi\",\"marker\":{\"color\":\"rgba(163,178,190,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(163,178,190,1)\"},\"error_y\":{\"color\":\"rgba(163,178,190,1)\"},\"error_x\":{\"color\":\"rgba(163,178,190,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.24785111193655565,0.37951421680585873,0.35339100916906452,0.32905323389864866,0.20342944152016423],\"type\":\"bar\",\"text\":[\"Sa Kaeo :  0.25 %\",\"Sa Kaeo :  0.38 %\",\"Sa Kaeo :  0.35 %\",\"Sa Kaeo :  0.33 %\",\"Sa Kaeo :  0.2 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Sa Kaeo\",\"marker\":{\"color\":\"rgba(184,178,174,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(184,178,174,1)\"},\"error_y\":{\"color\":\"rgba(184,178,174,1)\"},\"error_x\":{\"color\":\"rgba(184,178,174,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.22734965613743921,0.28318777557879804,0.51188329899315421,0.34473310460047646,0.21597377370604787],\"type\":\"bar\",\"text\":[\"Nakhon Pathom :  0.23 %\",\"Nakhon Pathom :  0.28 %\",\"Nakhon Pathom :  0.51 %\",\"Nakhon Pathom :  0.34 %\",\"Nakhon Pathom :  0.22 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nakhon Pathom\",\"marker\":{\"color\":\"rgba(202,179,158,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(202,179,158,1)\"},\"error_y\":{\"color\":\"rgba(202,179,158,1)\"},\"error_x\":{\"color\":\"rgba(202,179,158,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.21081828162975128,0.29359994441123238,0.46024817025839609,0.42921963359905857,0.23855601395403547],\"type\":\"bar\",\"text\":[\"Lop Buri :  0.21 %\",\"Lop Buri :  0.29 %\",\"Lop Buri :  0.46 %\",\"Lop Buri :  0.43 %\",\"Lop Buri :  0.24 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Lop Buri\",\"marker\":{\"color\":\"rgba(218,179,142,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(218,179,142,1)\"},\"error_y\":{\"color\":\"rgba(218,179,142,1)\"},\"error_x\":{\"color\":\"rgba(218,179,142,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.20958400058559251,0.32647171154920873,0.6421166552857368,0.41982148458907786,0.42657445793846344],\"type\":\"bar\",\"text\":[\"Suphan Buri :  0.21 %\",\"Suphan Buri :  0.33 %\",\"Suphan Buri :  0.64 %\",\"Suphan Buri :  0.42 %\",\"Suphan Buri :  0.43 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Suphan Buri\",\"marker\":{\"color\":\"rgba(232,179,125,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(232,179,125,1)\"},\"error_y\":{\"color\":\"rgba(232,179,125,1)\"},\"error_x\":{\"color\":\"rgba(232,179,125,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.20805645407207607,0.32294378812997865,0.36624784402211591,0.30887943812327567,0.25323431747064012],\"type\":\"bar\",\"text\":[\"Nong Khai :  0.21 %\",\"Nong Khai :  0.32 %\",\"Nong Khai :  0.37 %\",\"Nong Khai :  0.31 %\",\"Nong Khai :  0.25 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nong Khai\",\"marker\":{\"color\":\"rgba(246,180,108,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(246,180,108,1)\"},\"error_y\":{\"color\":\"rgba(246,180,108,1)\"},\"error_x\":{\"color\":\"rgba(246,180,108,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.19442987403837519,0.31744749542104939,0.55530919572844384,0.38814456833410926,0.30567078610649723],\"type\":\"bar\",\"text\":[\"Mae Hong Son :  0.19 %\",\"Mae Hong Son :  0.32 %\",\"Mae Hong Son :  0.56 %\",\"Mae Hong Son :  0.39 %\",\"Mae Hong Son :  0.31 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Mae Hong Son\",\"marker\":{\"color\":\"rgba(249,183,98,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(249,183,98,1)\"},\"error_y\":{\"color\":\"rgba(249,183,98,1)\"},\"error_x\":{\"color\":\"rgba(249,183,98,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.19426087981165788,0.32389390484481417,0.47265752262220173,0.25778293838471905,0.17043073463352126],\"type\":\"bar\",\"text\":[\"Prachin Buri :  0.19 %\",\"Prachin Buri :  0.32 %\",\"Prachin Buri :  0.47 %\",\"Prachin Buri :  0.26 %\",\"Prachin Buri :  0.17 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Prachin Buri\",\"marker\":{\"color\":\"rgba(239,190,99,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(239,190,99,1)\"},\"error_y\":{\"color\":\"rgba(239,190,99,1)\"},\"error_x\":{\"color\":\"rgba(239,190,99,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.18643545734368702,0.3472279133540494,0.55468769227115811,0.47333367650914626,0.30307582812207257],\"type\":\"bar\",\"text\":[\"Chachoengsao :  0.19 %\",\"Chachoengsao :  0.35 %\",\"Chachoengsao :  0.55 %\",\"Chachoengsao :  0.47 %\",\"Chachoengsao :  0.3 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Chachoengsao\",\"marker\":{\"color\":\"rgba(230,196,100,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(230,196,100,1)\"},\"error_y\":{\"color\":\"rgba(230,196,100,1)\"},\"error_x\":{\"color\":\"rgba(230,196,100,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.17243826307308543,0.2307029749542294,0.60335969968939684,0.54422133375768378,0.35986572038827047],\"type\":\"bar\",\"text\":[\"Buri Ram :  0.17 %\",\"Buri Ram :  0.23 %\",\"Buri Ram :  0.6 %\",\"Buri Ram :  0.54 %\",\"Buri Ram :  0.36 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Buri Ram\",\"marker\":{\"color\":\"rgba(219,202,101,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(219,202,101,1)\"},\"error_y\":{\"color\":\"rgba(219,202,101,1)\"},\"error_x\":{\"color\":\"rgba(219,202,101,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.17084106601059662,0.3164330281717429,0.401507806832128,0.30363406681769539,0.22349915186087949],\"type\":\"bar\",\"text\":[\"Loei :  0.17 %\",\"Loei :  0.32 %\",\"Loei :  0.4 %\",\"Loei :  0.3 %\",\"Loei :  0.22 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Loei\",\"marker\":{\"color\":\"rgba(209,208,102,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(209,208,102,1)\"},\"error_y\":{\"color\":\"rgba(209,208,102,1)\"},\"error_x\":{\"color\":\"rgba(209,208,102,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.17069589960326462,0.23318867207006749,0.29834846701295531,0.29194930841452804,0.2486213980418569],\"type\":\"bar\",\"text\":[\"Nonthaburi :  0.17 %\",\"Nonthaburi :  0.23 %\",\"Nonthaburi :  0.3 %\",\"Nonthaburi :  0.29 %\",\"Nonthaburi :  0.25 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nonthaburi\",\"marker\":{\"color\":\"rgba(197,214,103,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(197,214,103,1)\"},\"error_y\":{\"color\":\"rgba(197,214,103,1)\"},\"error_x\":{\"color\":\"rgba(197,214,103,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.16364873037460148,0.17582584857756489,0.17098803116845804,0.10910907087158644,0.074191375220575242],\"type\":\"bar\",\"text\":[\"Ranong :  0.16 %\",\"Ranong :  0.18 %\",\"Ranong :  0.17 %\",\"Ranong :  0.11 %\",\"Ranong :  0.07 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Ranong\",\"marker\":{\"color\":\"rgba(185,220,105,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(185,220,105,1)\"},\"error_y\":{\"color\":\"rgba(185,220,105,1)\"},\"error_x\":{\"color\":\"rgba(185,220,105,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.16155041594134786,0.29577776838175857,0.4074203763891065,0.17583657425639071,0.1406833574567751],\"type\":\"bar\",\"text\":[\"Ratchaburi :  0.16 %\",\"Ratchaburi :  0.3 %\",\"Ratchaburi :  0.41 %\",\"Ratchaburi :  0.18 %\",\"Ratchaburi :  0.14 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Ratchaburi\",\"marker\":{\"color\":\"rgba(186,221,116,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(186,221,116,1)\"},\"error_y\":{\"color\":\"rgba(186,221,116,1)\"},\"error_x\":{\"color\":\"rgba(186,221,116,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.15952065231155654,0.29095400184680986,0.65453429436230626,0.38853089467916779,0.29638694230574963],\"type\":\"bar\",\"text\":[\"Lampang :  0.16 %\",\"Lampang :  0.29 %\",\"Lampang :  0.65 %\",\"Lampang :  0.39 %\",\"Lampang :  0.3 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Lampang\",\"marker\":{\"color\":\"rgba(198,219,134,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(198,219,134,1)\"},\"error_y\":{\"color\":\"rgba(198,219,134,1)\"},\"error_x\":{\"color\":\"rgba(198,219,134,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.14594356082580975,0.25302377798934383,0.50979856922959865,0.38186008058251225,0.29957110839722606],\"type\":\"bar\",\"text\":[\"Nakhon Sawan :  0.15 %\",\"Nakhon Sawan :  0.25 %\",\"Nakhon Sawan :  0.51 %\",\"Nakhon Sawan :  0.38 %\",\"Nakhon Sawan :  0.3 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nakhon Sawan\",\"marker\":{\"color\":\"rgba(209,217,153,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(209,217,153,1)\"},\"error_y\":{\"color\":\"rgba(209,217,153,1)\"},\"error_x\":{\"color\":\"rgba(209,217,153,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.14248779385126714,0.23101841875065557,0.29229721931787439,0.18875591732789554,0.15822222053973967],\"type\":\"bar\",\"text\":[\"Sukhothai :  0.14 %\",\"Sukhothai :  0.23 %\",\"Sukhothai :  0.29 %\",\"Sukhothai :  0.19 %\",\"Sukhothai :  0.16 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Sukhothai\",\"marker\":{\"color\":\"rgba(220,215,170,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(220,215,170,1)\"},\"error_y\":{\"color\":\"rgba(220,215,170,1)\"},\"error_x\":{\"color\":\"rgba(220,215,170,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.13137339914445079,0.17543343649481075,0.30969102940911186,0.2102482015840173,0.14615108657454526],\"type\":\"bar\",\"text\":[\"Mukdahan :  0.13 %\",\"Mukdahan :  0.18 %\",\"Mukdahan :  0.31 %\",\"Mukdahan :  0.21 %\",\"Mukdahan :  0.15 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Mukdahan\",\"marker\":{\"color\":\"rgba(230,212,188,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(230,212,188,1)\"},\"error_y\":{\"color\":\"rgba(230,212,188,1)\"},\"error_x\":{\"color\":\"rgba(230,212,188,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.1272163611163068,0.13626288762979707,0.20884919311503011,0.18515081945396009,0.18361617408614508],\"type\":\"bar\",\"text\":[\"Pathum Thani :  0.13 %\",\"Pathum Thani :  0.14 %\",\"Pathum Thani :  0.21 %\",\"Pathum Thani :  0.19 %\",\"Pathum Thani :  0.18 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Pathum Thani\",\"marker\":{\"color\":\"rgba(240,209,205,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(240,209,205,1)\"},\"error_y\":{\"color\":\"rgba(240,209,205,1)\"},\"error_x\":{\"color\":\"rgba(240,209,205,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.12551065583015567,0.17156357200025474,0.19555399115677316,0.06778229416940329,0.054497170564664993],\"type\":\"bar\",\"text\":[\"Phatthalung :  0.13 %\",\"Phatthalung :  0.17 %\",\"Phatthalung :  0.2 %\",\"Phatthalung :  0.07 %\",\"Phatthalung :  0.05 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phatthalung\",\"marker\":{\"color\":\"rgba(249,206,223,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(249,206,223,1)\"},\"error_y\":{\"color\":\"rgba(249,206,223,1)\"},\"error_x\":{\"color\":\"rgba(249,206,223,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.12245849545781642,0.16924064388337254,0.23494073692316267,0.19175893619628631,0.15359403665222454],\"type\":\"bar\",\"text\":[\"Yala :  0.12 %\",\"Yala :  0.17 %\",\"Yala :  0.23 %\",\"Yala :  0.19 %\",\"Yala :  0.15 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Yala\",\"marker\":{\"color\":\"rgba(249,206,228,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(249,206,228,1)\"},\"error_y\":{\"color\":\"rgba(249,206,228,1)\"},\"error_x\":{\"color\":\"rgba(249,206,228,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.11622697081580412,0.09843234401200171,0.078819068452979979,0.072527930680182304,0.077580085059059264],\"type\":\"bar\",\"text\":[\"Narathiwat :  0.12 %\",\"Narathiwat :  0.1 %\",\"Narathiwat :  0.08 %\",\"Narathiwat :  0.07 %\",\"Narathiwat :  0.08 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Narathiwat\",\"marker\":{\"color\":\"rgba(244,208,226,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(244,208,226,1)\"},\"error_y\":{\"color\":\"rgba(244,208,226,1)\"},\"error_x\":{\"color\":\"rgba(244,208,226,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.11612946004724273,0.18587588793170204,0.26470246581438672,0.14021525679817501,0.1086676817124671],\"type\":\"bar\",\"text\":[\"Surin :  0.12 %\",\"Surin :  0.19 %\",\"Surin :  0.26 %\",\"Surin :  0.14 %\",\"Surin :  0.11 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Surin\",\"marker\":{\"color\":\"rgba(239,210,224,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(239,210,224,1)\"},\"error_y\":{\"color\":\"rgba(239,210,224,1)\"},\"error_x\":{\"color\":\"rgba(239,210,224,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.11295889374165037,0.21758682189883005,0.38752397904319841,0.41561338568968109,0.32602441537962601],\"type\":\"bar\",\"text\":[\"Samut Songkhram :  0.11 %\",\"Samut Songkhram :  0.22 %\",\"Samut Songkhram :  0.39 %\",\"Samut Songkhram :  0.42 %\",\"Samut Songkhram :  0.33 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Samut Songkhram\",\"marker\":{\"color\":\"rgba(234,212,223,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(234,212,223,1)\"},\"error_y\":{\"color\":\"rgba(234,212,223,1)\"},\"error_x\":{\"color\":\"rgba(234,212,223,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.0998535930797326,0.19677888731137547,0.41924551550306355,0.28363084472689482,0.24965327545213406],\"type\":\"bar\",\"text\":[\"Nan :  0.1 %\",\"Nan :  0.2 %\",\"Nan :  0.42 %\",\"Nan :  0.28 %\",\"Nan :  0.25 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nan\",\"marker\":{\"color\":\"rgba(229,213,221,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(229,213,221,1)\"},\"error_y\":{\"color\":\"rgba(229,213,221,1)\"},\"error_x\":{\"color\":\"rgba(229,213,221,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.091232688026129258,0.087408214214500596,0.058947531245363297,0.065824845886445479,0.074917963456214168],\"type\":\"bar\",\"text\":[\"Samut Sakhon :  0.09 %\",\"Samut Sakhon :  0.09 %\",\"Samut Sakhon :  0.06 %\",\"Samut Sakhon :  0.07 %\",\"Samut Sakhon :  0.07 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Samut Sakhon\",\"marker\":{\"color\":\"rgba(224,215,219,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(224,215,219,1)\"},\"error_y\":{\"color\":\"rgba(224,215,219,1)\"},\"error_x\":{\"color\":\"rgba(224,215,219,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.090799754876990102,0.16477017440042113,0.29046171244069047,0.1917082251008729,0.12461598819556666],\"type\":\"bar\",\"text\":[\"Sakon Nakhon :  0.09 %\",\"Sakon Nakhon :  0.16 %\",\"Sakon Nakhon :  0.29 %\",\"Sakon Nakhon :  0.19 %\",\"Sakon Nakhon :  0.12 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Sakon Nakhon\",\"marker\":{\"color\":\"rgba(218,217,217,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(218,217,217,1)\"},\"error_y\":{\"color\":\"rgba(218,217,217,1)\"},\"error_x\":{\"color\":\"rgba(218,217,217,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.082143657967063827,0.14781822478047982,0.19005575723798515,0.11644005122853299,0.086216715809573921],\"type\":\"bar\",\"text\":[\"Uttaradit :  0.08 %\",\"Uttaradit :  0.15 %\",\"Uttaradit :  0.19 %\",\"Uttaradit :  0.12 %\",\"Uttaradit :  0.09 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Uttaradit\",\"marker\":{\"color\":\"rgba(214,208,214,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(214,208,214,1)\"},\"error_y\":{\"color\":\"rgba(214,208,214,1)\"},\"error_x\":{\"color\":\"rgba(214,208,214,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.080762377606389532,0.11983078938636604,0.24161154069802979,0.13395566358432642,0.082553245713915535],\"type\":\"bar\",\"text\":[\"Chaiyaphum :  0.08 %\",\"Chaiyaphum :  0.12 %\",\"Chaiyaphum :  0.24 %\",\"Chaiyaphum :  0.13 %\",\"Chaiyaphum :  0.08 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Chaiyaphum\",\"marker\":{\"color\":\"rgba(211,195,210,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(211,195,210,1)\"},\"error_y\":{\"color\":\"rgba(211,195,210,1)\"},\"error_x\":{\"color\":\"rgba(211,195,210,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.079989256512795551,0.14923141298846898,0.22410171662809902,0.20312467570830747,0.16505764515988897],\"type\":\"bar\",\"text\":[\"Nakhon Phanom :  0.08 %\",\"Nakhon Phanom :  0.15 %\",\"Nakhon Phanom :  0.22 %\",\"Nakhon Phanom :  0.2 %\",\"Nakhon Phanom :  0.17 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nakhon Phanom\",\"marker\":{\"color\":\"rgba(207,182,206,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(207,182,206,1)\"},\"error_y\":{\"color\":\"rgba(207,182,206,1)\"},\"error_x\":{\"color\":\"rgba(207,182,206,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.079415922520201451,0.13676507415370751,0.1756203036034279,0.096072631270672434,0.044413469126365263],\"type\":\"bar\",\"text\":[\"Si Sa Ket :  0.08 %\",\"Si Sa Ket :  0.14 %\",\"Si Sa Ket :  0.18 %\",\"Si Sa Ket :  0.1 %\",\"Si Sa Ket :  0.04 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Si Sa Ket\",\"marker\":{\"color\":\"rgba(203,169,202,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(203,169,202,1)\"},\"error_y\":{\"color\":\"rgba(203,169,202,1)\"},\"error_x\":{\"color\":\"rgba(203,169,202,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.064543697405404138,0.12423438478447511,0.27972213269879254,0.22078873327067472,0.16045999018983767],\"type\":\"bar\",\"text\":[\"Phrae :  0.06 %\",\"Phrae :  0.12 %\",\"Phrae :  0.28 %\",\"Phrae :  0.22 %\",\"Phrae :  0.16 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phrae\",\"marker\":{\"color\":\"rgba(198,156,198,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(198,156,198,1)\"},\"error_y\":{\"color\":\"rgba(198,156,198,1)\"},\"error_x\":{\"color\":\"rgba(198,156,198,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.061681793006310659,0.11615776182077994,0.21523079061444031,0.12741208823616273,0.093482598165963063],\"type\":\"bar\",\"text\":[\"Lamphun :  0.06 %\",\"Lamphun :  0.12 %\",\"Lamphun :  0.22 %\",\"Lamphun :  0.13 %\",\"Lamphun :  0.09 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Lamphun\",\"marker\":{\"color\":\"rgba(194,143,194,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(194,143,194,1)\"},\"error_y\":{\"color\":\"rgba(194,143,194,1)\"},\"error_x\":{\"color\":\"rgba(194,143,194,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.060852951473538745,0.1096747609166297,0.17260394015740102,0.12173244554986026,0.084778803797028013],\"type\":\"bar\",\"text\":[\"Kamphaeng Phet :  0.06 %\",\"Kamphaeng Phet :  0.11 %\",\"Kamphaeng Phet :  0.17 %\",\"Kamphaeng Phet :  0.12 %\",\"Kamphaeng Phet :  0.08 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Kamphaeng Phet\",\"marker\":{\"color\":\"rgba(189,130,190,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(189,130,190,1)\"},\"error_y\":{\"color\":\"rgba(189,130,190,1)\"},\"error_x\":{\"color\":\"rgba(189,130,190,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.054953183393737219,0.098741478932499321,0.19709531973084185,0.10041718911772717,0.066803377194330812],\"type\":\"bar\",\"text\":[\"Phichit :  0.05 %\",\"Phichit :  0.1 %\",\"Phichit :  0.2 %\",\"Phichit :  0.1 %\",\"Phichit :  0.07 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phichit\",\"marker\":{\"color\":\"rgba(191,141,190,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(191,141,190,1)\"},\"error_y\":{\"color\":\"rgba(191,141,190,1)\"},\"error_x\":{\"color\":\"rgba(191,141,190,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.05320532119636593,0.10058493247881377,0.16160747231982497,0.07199776922813296,0.070283673785206294],\"type\":\"bar\",\"text\":[\"Roi Et :  0.05 %\",\"Roi Et :  0.1 %\",\"Roi Et :  0.16 %\",\"Roi Et :  0.07 %\",\"Roi Et :  0.07 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Roi Et\",\"marker\":{\"color\":\"rgba(194,157,192,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(194,157,192,1)\"},\"error_y\":{\"color\":\"rgba(194,157,192,1)\"},\"error_x\":{\"color\":\"rgba(194,157,192,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.051437296997976285,0.10464406325122547,0.22773958353141166,0.16914547572156979,0.12875876229540703],\"type\":\"bar\",\"text\":[\"Phayao :  0.05 %\",\"Phayao :  0.1 %\",\"Phayao :  0.23 %\",\"Phayao :  0.17 %\",\"Phayao :  0.13 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Phayao\",\"marker\":{\"color\":\"rgba(197,172,193,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(197,172,193,1)\"},\"error_y\":{\"color\":\"rgba(197,172,193,1)\"},\"error_x\":{\"color\":\"rgba(197,172,193,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.049652410035098599,0.099190670898610167,0.17241334576383338,0.11758151188529312,0.081441993118232484],\"type\":\"bar\",\"text\":[\"Uthai Thani :  0.05 %\",\"Uthai Thani :  0.1 %\",\"Uthai Thani :  0.17 %\",\"Uthai Thani :  0.12 %\",\"Uthai Thani :  0.08 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Uthai Thani\",\"marker\":{\"color\":\"rgba(200,188,194,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(200,188,194,1)\"},\"error_y\":{\"color\":\"rgba(200,188,194,1)\"},\"error_x\":{\"color\":\"rgba(200,188,194,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.048995861965574268,0.065662780664067485,0.15944049693208864,0.094020214936304053,0.060083962460544045],\"type\":\"bar\",\"text\":[\"Chai Nat :  0.05 %\",\"Chai Nat :  0.07 %\",\"Chai Nat :  0.16 %\",\"Chai Nat :  0.09 %\",\"Chai Nat :  0.06 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Chai Nat\",\"marker\":{\"color\":\"rgba(202,203,195,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(202,203,195,1)\"},\"error_y\":{\"color\":\"rgba(202,203,195,1)\"},\"error_x\":{\"color\":\"rgba(202,203,195,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.04552543171756377,0.065637545160353389,0.11258742296550621,0.05939928908760754,0.044874455780068948],\"type\":\"bar\",\"text\":[\"Kalasin :  0.05 %\",\"Kalasin :  0.07 %\",\"Kalasin :  0.11 %\",\"Kalasin :  0.06 %\",\"Kalasin :  0.04 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Kalasin\",\"marker\":{\"color\":\"rgba(203,218,196,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(203,218,196,1)\"},\"error_y\":{\"color\":\"rgba(203,218,196,1)\"},\"error_x\":{\"color\":\"rgba(203,218,196,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.043902940508342848,0.076530450338541223,0.098748612649943321,0.053469779003904448,0.038503070705369721],\"type\":\"bar\",\"text\":[\"Maha Sarakham :  0.04 %\",\"Maha Sarakham :  0.08 %\",\"Maha Sarakham :  0.1 %\",\"Maha Sarakham :  0.05 %\",\"Maha Sarakham :  0.04 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Maha Sarakham\",\"marker\":{\"color\":\"rgba(204,234,197,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(204,234,197,1)\"},\"error_y\":{\"color\":\"rgba(204,234,197,1)\"},\"error_x\":{\"color\":\"rgba(204,234,197,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.039237453472700128,0.074475018561028422,0.090615204072263672,0.087256276828071147,0.050384925382288448],\"type\":\"bar\",\"text\":[\"Bueng Kan :  0.04 %\",\"Bueng Kan :  0.07 %\",\"Bueng Kan :  0.09 %\",\"Bueng Kan :  0.09 %\",\"Bueng Kan :  0.05 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Bueng Kan\",\"marker\":{\"color\":\"rgba(212,235,186,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(212,235,186,1)\"},\"error_y\":{\"color\":\"rgba(212,235,186,1)\"},\"error_x\":{\"color\":\"rgba(212,235,186,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.038348125936873201,0.052296796121898637,0.087254942046538664,0.052094125288326007,0.031435626312495399],\"type\":\"bar\",\"text\":[\"Pattani :  0.04 %\",\"Pattani :  0.05 %\",\"Pattani :  0.09 %\",\"Pattani :  0.05 %\",\"Pattani :  0.03 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Pattani\",\"marker\":{\"color\":\"rgba(221,235,174,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(221,235,174,1)\"},\"error_y\":{\"color\":\"rgba(221,235,174,1)\"},\"error_x\":{\"color\":\"rgba(221,235,174,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.037153802312914368,0.055230423428661843,0.10811674142943066,0.061257159219571727,0.054979527460593355],\"type\":\"bar\",\"text\":[\"Ang Thong :  0.04 %\",\"Ang Thong :  0.06 %\",\"Ang Thong :  0.11 %\",\"Ang Thong :  0.06 %\",\"Ang Thong :  0.05 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Ang Thong\",\"marker\":{\"color\":\"rgba(229,236,162,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(229,236,162,1)\"},\"error_y\":{\"color\":\"rgba(229,236,162,1)\"},\"error_x\":{\"color\":\"rgba(229,236,162,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.032171955152202142,0.048367628193614502,0.10672457368511055,0.070750276280962962,0.040988124586924662],\"type\":\"bar\",\"text\":[\"Sing Buri :  0.03 %\",\"Sing Buri :  0.05 %\",\"Sing Buri :  0.11 %\",\"Sing Buri :  0.07 %\",\"Sing Buri :  0.04 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Sing Buri\",\"marker\":{\"color\":\"rgba(236,236,150,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(236,236,150,1)\"},\"error_y\":{\"color\":\"rgba(236,236,150,1)\"},\"error_x\":{\"color\":\"rgba(236,236,150,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.030516471577678488,0.04100643176021386,0.075172914836903512,0.039144355559573102,0.022362432042248116],\"type\":\"bar\",\"text\":[\"Yasothon :  0.03 %\",\"Yasothon :  0.04 %\",\"Yasothon :  0.08 %\",\"Yasothon :  0.04 %\",\"Yasothon :  0.02 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Yasothon\",\"marker\":{\"color\":\"rgba(243,236,138,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(243,236,138,1)\"},\"error_y\":{\"color\":\"rgba(243,236,138,1)\"},\"error_x\":{\"color\":\"rgba(243,236,138,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.016103573504262527,0.026198238180784653,0.057841255091394643,0.022028899847587342,0.015160660412532988],\"type\":\"bar\",\"text\":[\"Amnat Charoen :  0.02 %\",\"Amnat Charoen :  0.03 %\",\"Amnat Charoen :  0.06 %\",\"Amnat Charoen :  0.02 %\",\"Amnat Charoen :  0.02 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Amnat Charoen\",\"marker\":{\"color\":\"rgba(249,237,125,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(249,237,125,1)\"},\"error_y\":{\"color\":\"rgba(249,237,125,1)\"},\"error_x\":{\"color\":\"rgba(249,237,125,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2019,2020,2021,2022,2023],\"y\":[0.014973035119888976,0.0224558129799848,0.024230348121380797,0.019284968575763305,0.012834356901789907],\"type\":\"bar\",\"text\":[\"Nong Bua Lam Phu :  0.01 %\",\"Nong Bua Lam Phu :  0.02 %\",\"Nong Bua Lam Phu :  0.02 %\",\"Nong Bua Lam Phu :  0.02 %\",\"Nong Bua Lam Phu :  0.01 %\"],\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\"],\"name\":\"Nong Bua Lam Phu\",\"marker\":{\"color\":\"rgba(255,237,111,1)\",\"line\":{\"color\":\"grey\",\"width\":0.5}},\"textfont\":{\"color\":\"rgba(255,237,111,1)\"},\"error_y\":{\"color\":\"rgba(255,237,111,1)\"},\"error_x\":{\"color\":\"rgba(255,237,111,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations:**\n\n- The revenue distribution across provinces is highly skewed, with a few provinces such as Bangkok, Phucket consistently contributing a significant portion of the total revenue.\n\n- This pattern remains even during the COVID period, although the skewness slightly decreases.\n\n:::\n\n\n### Determining Key Economic Indicators\n\nIn this section, we select four key economic indicators or Key Performance Indicators (KPI) for further geospatial analysis. \n\nThe selection is based on the following criteria:\n\n- **Economic significance**\n- **Low to moderate correlation:** To avoid redundancy and ensure each indicator captures distinct information.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrelation_matrix <- tourism_df_ft %>%\n  select(7:21) %>%\n  cor(use = \"complete.obs\")  # Use \"complete.obs\" to handle NA values\ncorrplot(correlation_matrix, method = \"circle\", type = \"lower\", \n         tl.col = \"black\", tl.srt = 45, \n         addCoef.col = \"black\")  # Add correlation coefficients\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/viz_feat_corrplot-1.png){width=1152}\n:::\n:::\n\n\n\n:::callout-note\n\nWe will select the following economic indictators:\n\n- **Total number of tourists (`no_tourist_all`)**: This captures the overall tourism demand across provinces, providing a broad view of how tourism is distributed. Since it is highly correlated with both foreign and domestic tourist numbers, we don't have to analyse `no_tourist_thai` and `no_tourist_foreign` separately.\n\n- **Revenue from foreign tourists (`revenue_foreign`)**: This indicator is crucial for understanding the economic impact of international tourists, and it can indictate foreign revenue inflow to the Thai economy.\n\n- **Revenue from thai tourists (`revenue_thai`)**: We will also analyse the revenue from Thai tourist to compare against `revenue_foreign`\n\n- **Average revenue per tourist (`avg_revenue_all`)**: This indicator reflects the quality of tourism by measuring spending per tourist. It also has a low correlation with other indicator, making it a distinct measure.\n\n:::\n\n### Creating the Derived Tourism Economy Indicators Layer in spacetime\n\nIn this subsection, we will create a **derived tourism economy indictator layer in spacetime s3 class of sfdep.** This is in preparation of the creation of space time cubes for emerging hot spot analysis in later sections.\n\nThe code below create the spacetime object using `tourism_df_ft` and `admin_boundary`. Then we use `is_spacetime()` to verify that `tourism_st` is a valid spacetime cube object.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_st <- spacetime(\n  .data = tourism_df_ft, \n  .geometry = admin_boundary, \n  .loc_col = \"province_eng\", \n  .time_col = \"date_int\"\n  )\n\nis_spacetime_cube(tourism_st)\n```\n:::\n\n\n\nThen we save `tourism_st` for future analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(tourism_st, file = \"data/rds/tourism_st.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_st <- read_rds(\"data/rds/tourism_st.rds\")\n```\n:::\n\n\n\n## Spatial Independence of Thailand's Tourism Economy Indictators\n\nIn this section, we explore whether key tourism economy indicators in Thailand exhibit spatial dependence or independence. This involves creating spatial weight matrices, computing global and local Moran's I statistics, and analyzing patterns of spatial autocorrelation.\n\n### Creating Spatial Weight Matrix\n\nTo analyze spatial autocorrelation, we need to define how provinces in Thailand are related to each other spatially. The spatial relationships are captured using **spatial weight matrices**, which define the \"neighborhood\" structure for each province.\n\n#### Choice of Neighbors\n\n- **`st_contiguity`**: This method defines neighbors based on **shared boundaries** (either Rook or Queen contiguity). Provinces are considered neighbors if they touch along a boundary or corner.\n- **`st_dist_band`**: Defines neighbors based on a **fixed distance band**. Provinces within a certain distance are considered neighbors.\n- **`st_knn`**: Defines neighbors based on the **k-nearest neighbors** approach, where each province has a fixed number of nearest neighbors. The distance band is adaptive.\n\nFor this study, we will use the **`st_knn`** method for these reasons:\n\n1. From general knowledge, we understand that Thailand has several islands such as Phuket; This makes `st_contiguity` the least ideal choice.\n\n2. Using `st_knn`, it allows us to define a fixed number of neighbors for each province, ensuring that each province has the same number of neighbors, making the analysis more balanced and suitable for regions with varying geographic sizes and shapes.\n\n#### Choice of K\n\nWe choose the number of neighbors `k` as the square root of the total number of provinces (77), which is approximately 9 (since $\\sqrt{77} \\approx 8.77$). This is a common rule of thumb in spatial analysis, providing a reasonable number of neighbors to capture both local and slightly broader spatial interactions.\n\nIt is also important to choose an **odd value for `k` (e.g., 9)** to avoid ties when calculating spatial statistics.\n\n`k` should also be reasonably small to ensure that the spatial relationships remain localized. If `k` is too large, spatial patterns may become diluted. For this reason, we will also try `k=5`.\n\n#### Choice of Weights\n\n- **`st_weights` (binary)**: Neighbors either exist or don't, with a binary weight of 1 for neighbors and 0 for non-neighbors.\n- **`st_kernel_weights`**: Assigns weights based on a **kernel function** (such as Gaussian), where closer neighbors have higher weights, and the influence decays with distance.\n- **`st_inverse_distance`**: Assigns weights based on the **inverse of distance** between provinces. Closer provinces have higher weights, and farther provinces have smaller weights.\n\nAccording to Tobler’s First Law of Geography, **“everything is related to everything else, but near things are more related than distant things.”** Using `st_inverse_distance` allows us to capture this principle, with closer provinces being assigned greater weights.\n\nIn the step below, We use sum for the variables like `no_tourist_all, revenue_foreign, and revenue_thai` because these are cumulative metrics and we use take the mean for `avg_revenue_all`.\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_agg <- tourism %>%\n  group_by(province_eng) %>%\n  summarize(\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE), \n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE), \n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    avg_revenue_all = mean(avg_revenue_all, na.rm = TRUE),\n    geometry = st_union(geometry)\n  )\n```\n:::\n\n\n\nNext, we compute centroids for each province, which will be used for plotting and spatial weighting.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# compute centroid using st_centroid\nlongitude <- map_dbl(tourism_agg$geometry, ~st_centroid(.x)[[1]])\nlatitude <- map_dbl(tourism_agg$geometry, ~st_centroid(.x)[[2]])\ncoords <- cbind(longitude, latitude)\n```\n:::\n\n\n\nWe compute K-nearest neighbors using `k = 9` and `k = 5`, and visually compare the results to determine the most appropriate value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb_knn_9 <- st_knn(tourism_agg$geometry, k = 9)\n\nnb_knn_5 <- st_knn(tourism_agg$geometry, k = 5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,2))\n\nplot(tourism_agg$geometry,\n     main=\"K = 5\")\nplot(nb_knn_5,\n     coords,\n     pch = 19,\n     cex = 0.6,\n     add = TRUE,\n     col= \"red\")\n\nplot(tourism_agg$geometry,\n     main=\"K = 9\")\nplot(nb_knn_9,\n     coords,\n     pch = 19,\n     cex = 0.6,\n     add = TRUE,\n     col= \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/compare_knn-1.png){width=1152}\n:::\n:::\n\n\n\n::: callout-note\n\nFrom the plot above, `K = 9` results in a more congested view, whereas `K = 5` offers a clearer spatial relationship, making it a more appropriate choice. \n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknn5_weights <- st_weights(nb_knn_5, style = \"W\")\n```\n:::\n\n\n\nUsing `st_weights`, each neighbour has the same weight of 0.2 (1/5), regardless of distance.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknn5_weights_inv <- st_inverse_distance(nb_knn_5,\n                                    tourism_agg$geometry,\n                                    # default=100; lower more agressive\n                                    scale= 1,\n                                    # default\n                                    alpha = 1)\n```\n:::\n\n\n\nFinally, we selected `st_inverse_distance` to assign weights based on distance, ensuring closer provinces are weighted more heavily. After experimenting with various parameters, setting `scale = 1 and alpha = 1` produces a reasonable range of weights, with **values typically between 0 and 6**, reflecting distance-based proximity effects.\n\n### Global Spatial Autocorrelation Analysis\n\nIn this section, we compute Global Moran's I to determine whether Thailand's tourism economy indicators exhibit overall spatial autocorrelation. Global Moran’s I is a statistical measure used to evaluate the degree to which similar values in a dataset are clustered together or dispersed across a geographic space.\n\nIn simpler terms, it measures whether similar values occur near each other (positive autocorrelation) or if dissimilar values are found near each other (negative autocorrelation).\n\n-  **Null Hypothesis (H_0$)**: The tourism economy indicators are spatially independent, meaning they are randomly distributed across space.\n-  **Alternative Hypothesis ($H_1$)**: The tourism economy indicators show spatial dependence, meaning similar values are either clustered together or systematically dispersed across space.\n\nWe will use an **alpha value (α) of 0.05 (95% confidence level)** to determine the statistical significance.\n\nWe will focus on `global_moran_perm` as it performs permutation testing which ensures a more robust and accurate p-value estimation as compared to `global_moran`. `global_moran` does not allow for formal hypothesis testing, as it only returns the Moran's I value, not the associated p-value or significance level. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nset.seed(1234)\nkpis <- c(\"no_tourist_all\", \"revenue_foreign\", \"revenue_thai\", \"avg_revenue_all\")\n\n# Function to compute Global Moran's I for each KPI\ncompute_global_moran_perm <- function(tourism_data, kpi_column) {\n  global_moran_perm(tourism_data[[kpi_column]], \n                    nb_knn_5, \n                    knn5_weights_inv,\n                    nsim = 99)\n}\n\nextract_moran_info <- function(moran_result) {\n  list(\n    moran_I = format(moran_result$statistic,  scientific = TRUE),\n    p_value = format(moran_result$p.value, scientific = TRUE),\n    interpretation = ifelse(moran_result$p.value < 0.05,\n                            \"Spatial dependence detected\",\n                            \"No spatial dependence\")\n  )\n}\n\n# Apply the function to each KPI and store results\ngmp_results <- map(kpis, ~compute_global_moran_perm(tourism_agg, .x))\n\n# Naming the results for easier interpretation\nnames(gmp_results) <- kpis\n\n# Apply the extraction function to each KPI result\nmoran_summary <- map_df(gmp_results, extract_moran_info, .id = \"kpi\")\n\ngmp_results\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$no_tourist_all\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = -0.020104, observed rank = 53, p-value = 0.94\nalternative hypothesis: two.sided\n\n\n$revenue_foreign\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = -0.021885, observed rank = 52, p-value = 0.96\nalternative hypothesis: two.sided\n\n\n$revenue_thai\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = -0.072233, observed rank = 11, p-value = 0.22\nalternative hypothesis: two.sided\n\n\n$avg_revenue_all\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.32153, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(moran_summary)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e3479f292a01744eb530\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e3479f292a01744eb530\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\"],[\"no_tourist_all\",\"revenue_foreign\",\"revenue_thai\",\"avg_revenue_all\"],[\"-2.010351e-02\",\"-2.188518e-02\",\"-7.223272e-02\",\"3.21529e-01\"],[\"9.4e-01\",\"9.6e-01\",\"2.2e-01\",\"0e+00\"],[\"No spatial dependence\",\"No spatial dependence\",\"No spatial dependence\",\"Spatial dependence detected\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>kpi<\\/th>\\n      <th>moran_I<\\/th>\\n      <th>p_value<\\/th>\\n      <th>interpretation<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"kpi\",\"targets\":1},{\"name\":\"moran_I\",\"targets\":2},{\"name\":\"p_value\",\"targets\":3},{\"name\":\"interpretation\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n:::callout-note\n\n**Observations:**\n\n- `no_tourist_all`, `revenue_foreign`, and `revenue_thai` has high p-values (> 0.05). This means we **fail to reject the null hypothesis** indicating these indictators are spatially independent.\n\n- For `avg_revenue_all`, the p-value of 2.2e-16 means that we **can reject the null hypothesis**. From the  conclude that positive Moran's I value, we can conclude that there is significant **spatial dependence**. Provinces with similar values for average revenue per tourist tend to cluster together.\n\n:::\n\n### Local Spatial Autocorrelation Analysis\n\nWhile global indicators such asGlobal Moran's I provides an overall measure of spatial autocorrelation for the entire study area, Local Indicators of Spatial Association (LISA) such as Local Moran's I helps identify **specific clusters** or **outliers**.\n\nIn this section, we will compute the Local Moran's I for the selected KPIs and visualize these clusters using LISA map.\n\nIn the code block below, we will use a custom function to compute the Local Moran's I iteratively for the KPIs and save the results into `lmp_summary.rds`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nset.seed(1234)\nkpis <- c(\"no_tourist_all\", \"revenue_foreign\", \"revenue_thai\", \"avg_revenue_all\")\n\n# Function to compute Local Moran's I for each KPI and add it to the data frame\ncompute_local_moran_df <- function(data, kpi_column, nb, wt) {\n  data %>%\n    mutate(local_moran = local_moran(!!sym(kpi_column), nb, wt, nsim = 99),\n           kpi = kpi_column,  \n           .before = 1) %>%\n    unnest(local_moran) \n}\n\n# Apply the function to each KPI and combine into a single data frame\nlmp_summary <- map_df(kpis, ~compute_local_moran_df(tourism_agg, \n                                                    .x, \n                                                    nb_knn_5, \n                                                    knn5_weights_inv))\n\nwrite_rds(lmp_summary, file = \"data/rds/lmp_summary.rds\")\n```\n:::\n\n\n\nHere, we load and inspect the summary data for Local Moran’s I results:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlmp_summary <- read_rds(\"data/rds/lmp_summary.rds\")\n\nhead(lmp_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 18 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 100.1913 ymin: 13.17847 xmax: 105.0603 ymax: 18.44898\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 6 × 19\n       ii      eii  var_ii   z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n    <dbl>    <dbl>   <dbl>  <dbl> <dbl>    <dbl>        <dbl>    <dbl>    <dbl>\n1   1.19    0.0338   3.35   0.631 0.528     0.2          0.1    -3.69    15.4  \n2  -0.351   0.490    4.83  -0.383 0.702     0.34         0.17   -3.19    12.1  \n3 -21.7   -12.0    534.    -0.419 0.675     0.76         0.38    0.769    0.131\n4   0.584  -0.0891   1.56   0.539 0.590     0.52         0.26   -2.73     8.19 \n5   0.117  -0.0486   0.206  0.364 0.716     0.72         0.36   -4.02    21.2  \n6   0.253  -0.0208   0.141  0.730 0.465     0.18         0.09    3.55    14.1  \n# ℹ 10 more variables: mean <fct>, median <fct>, pysal <fct>, kpi <chr>,\n#   province_eng <chr>, no_tourist_all <dbl>, revenue_foreign <dbl>,\n#   revenue_thai <dbl>, avg_revenue_all <dbl>, geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n#### Visualization of Local Moran's I Maps\n\nIn this subsection, we will visualize the Local Moran's I values on choropleth maps.\n\nSimilarly, we will implement a list of custom functions to process there KPIs iteratively.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nkpis <- c(\"no_tourist_all\", \"revenue_foreign\", \"revenue_thai\", \"avg_revenue_all\")\n# kpis <- c(\"no_tourist_all\")\n\np_value_palette <- c(\"red\", \"orange\", \"yellow\")\n\n# Function to create maps for a given KPI\nplot_local_moran_kpi <- function(kpi_name, data) {\n  # Filter the data for the current KPI\n  kpi_data <- data %>% filter(kpi == kpi_name)\n  \n  tmap_mode(\"plot\")\n\n  # Map 1: Moran's I\n  map1 <- tm_shape(kpi_data) +\n    tm_fill(\"ii\") + \n    tm_borders(alpha = 0.5) +\n    tm_view(set.zoom.limits = c(6,8)) +\n    tm_layout(\n      main.title = paste(\"Local Moran's I of\", kpi_name),\n      main.title.size = 0.8\n    )\n\n  # Map 2: p-value\n  map2 <- tm_shape(kpi_data) +\n    tm_fill(\n      \"p_ii_sim\", \n      breaks = c(0, 0.001, 0.01, 0.05, 1),\n      labels = c(\"<0.001\", \"0.001-0.01\", \"0.01-0.05\", \"Not sig\"), \n      palette = p_value_palette\n    ) +\n    tm_borders(alpha = 0.5) +\n    tm_view(set.zoom.limits = c(6,8)) +\n    tm_layout(\n      main.title = paste(\"p-value of Local Moran's I for\", kpi_name),\n      main.title.size = 0.8\n    )\n\n  # Return the arranged maps\n  tmap_arrange(map1, map2, ncol = 2)\n}\n\n# Function to plot LISA map for a given KPI\nplot_lisa_kpi <- function(kpi_name, data) {\n  # Filter the data for the selected KPI\n  kpi_data <- data %>% filter(kpi == kpi_name)\n  \n  # Filter significant LISA results (p_ii_sim < 0.05)\n  lisa_sig <- kpi_data %>% filter(p_ii_sim < 0.05)\n  \n  tmap_mode(\"plot\")\n\n  tm_shape(kpi_data) +\n    tm_polygons() + \n    tm_borders(alpha = 0.5) +\n    tm_layout(\n      main.title = paste(\"LISA Map for\", kpi_name),\n      main.title.size = 0.8\n    ) + \n    tm_shape(lisa_sig) +\n    tm_fill(\"mean\")\n}\n\n# Function to plot LISA maps for multiple KPIs side by side\nplot_lisa_multiple_kpis <- function(kpi_list, data) {\n  tmap_mode(\"plot\")\n  \n  map_list <- list()\n  \n  # Loop through each KPI and create a LISA map\n  for (kpi_name in kpi_list) {\n    # Filter the data for the selected KPI\n    kpi_data <- data %>% filter(kpi == kpi_name)\n    \n    # Filter significant LISA results (p_ii_sim < 0.05)\n    lisa_sig <- kpi_data %>% filter(p_ii_sim < 0.05)\n    \n    map <- tm_shape(kpi_data) +\n      tm_polygons() + \n      tm_borders(alpha = 0.5) +\n      tm_layout(\n        main.title = paste(\"LISA Map for\", kpi_name),\n        main.title.size = 0.8\n      ) + \n      tm_shape(lisa_sig) +\n      tm_fill(\"mean\")\n    \n    map_list[[kpi_name]] <- map\n  }\n  \n  tmap_arrange(map_list, ncol = length(kpi_list))\n}\n```\n:::\n\n\n\nFor each KPI, the visualization has two maps:\n\n1. **Local Moran's I Map**: Shows the Moran's I values for each region to identify spatial clusters and outliers.\n2. **P-value Map**: Displays the statistical significance of the Local Moran's I results specifically regions with **p < 0.05** indicating significant spatial patterns.\n\n::: panel-tabset\n\n##### Total no. of tourists\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"no_tourist_all\",lmp_summary)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_no_tourist_all-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_kpi(\"no_tourist_all\", lmp_summary)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_no_tourist_all-1.png){width=1152}\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations:**\n\nThis LISA map shows the local spatial autocorrelation for the **total number of tourists** across Thailand.\n\n- **Light Green (Low-Low)**: These areas, mostly in the northwest and northeast regions of Thailand, are clusters of provinces with **low numbers of tourists**, surrounded by other provinces with similarly low tourist numbers.\n\n- **Light Purple (Low-High)**: Samut Prakan is shown as a **Low-High outlier**, meaning it has a **low number of tourists** compared to its neighboring provinces, which have higher tourist numbers.\n\n- Other areas indicate in grey shows no statistically significant local spatial autocorrelation.\n\n:::\n\n##### Revenue\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"revenue_foreign\",lmp_summary)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_revenue_foreign-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"revenue_thai\",lmp_summary)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_revenue_thai-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_multiple_kpis(c(\"revenue_foreign\", \"revenue_thai\"), lmp_summary)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_revenue-1.png){width=1152}\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations:**\n\nThis LISA map shows the local spatial autocorrelation for **revenue from local and foreign tourists** across Thailand.\n\nInterestingly, the map reveals only **Low-Low** and **Low-High clusters**. The **Northwest** and **Northeast regions**, particularly areas like **Nakhon Sawan** and **Kalasin**, consistently exhibit **Low-Low clusters** for both local and foreign tourism revenue. \n\n:::\n##### Avg Revenue / Tourist\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"avg_revenue_all\",lmp_summary)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/avg_revenue-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_kpi(\"avg_revenue_all\", lmp_summary)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_avg_revenue-1.png){width=1152}\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations:**\n\nThis LISA map shows the local spatial autocorrelation for **average revenue per tourist** across Thailand.\n\n- **Light Green (Low-Low)**: Northwestern regions such as Kanchanaburi and Northeastern regions such as Ubon-Ratchathani are **Low-Low clusters**, where provinces with **low average revenue** are surrounded by other provinces with similarly low average revenue per tourist.\n\n- **Light Purple (Low-High)**: Southern regions such as Nakhon Si Thammarat shows a **Low-High outlier**, indicating it has **low average revenue** but is surrounded by provinces with **high average revenue**.\n\n- **Red (High-High)**: Right beside the Low-High cluster, in provinces such as Surat Thani and Phuket are **High-High clusters**. This means they have **high average revenue per tourist** and are surrounded by other provinces with similarly high revenues. This suggests the region around Phuket, is a hotspot for tourism revenue.\n\n:::\n\n:::\n\n\n## Spatio-Temporal Independence of Thailand's Tourism Economy Indictators\n\nIn this section, we will form spatio-temporal analysis to understand the **spatio-temporal patterns** of Thailand's tourism economy across different time periods—**pre-COVID, during COVID, and post-COVID** to uncover how the pandemic has impacted the tourism indicators.\n\nBy analyzing **Global Moran's I** across these periods, we aim to assess whether these indicators exhibited spatial dependence (clustering or dispersion) during each phase.\n\n\n### Global Spatial Autocorrelation Analysis Across Time Periods\n\nTo recap, the three distinct periods for this analysis:\n- Pre-COVID (before January 2020)\n- COVID (January 2020 to September 2022)\n- Post-COVID (after September 2022)\n\nTo conduct the spatio-temporal analysis, we first aggregate the tourism data at the provincial level and for each time period (pre-COVID, COVID, post-COVID).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_agg_tp <- tourism %>%\n  group_by(province_eng, time_period) %>%\n  summarize(\n    no_tourist_all = sum(no_tourist_all, na.rm = TRUE), \n    revenue_foreign = sum(revenue_foreign, na.rm = TRUE), \n    revenue_thai = sum(revenue_thai, na.rm = TRUE),\n    avg_revenue_all = mean(avg_revenue_all, na.rm = TRUE),\n    geometry = st_union(geometry)\n  )\n```\n:::\n\n\n\nNext, we create subsets for each time period by filtering the aggregated data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npre_covid_agg <- filter(tourism_agg_tp, time_period ==\"pre-covid\")\ncovid_agg <- filter(tourism_agg_tp, time_period ==\"covid\")\npost_covid_agg <- filter(tourism_agg_tp, time_period ==\"post-covid\")\n```\n:::\n\n\n\n\nWe will reuse the Global Moran's I functions from the previous section and apply them to each time period (pre-COVID, COVID, post-COVID).\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nset.seed(1234)\ntime_periods <- c(\"pre_covid\", \"covid\", \"post_covid\")\nagg_datasets <- list(pre_covid_agg, covid_agg, post_covid_agg)\n\n# Define a function to calculate Moran's I for a dataset and append the time period\ncompute_moran_summary <- function(tourism_data, time_period) {\n  gmp_results <- map(kpis, ~compute_global_moran_perm(tourism_data, .x))\n\n  names(gmp_results) <- kpis\n  \n  # Extract Moran's I info and add a time_period column\n  moran_summary <- map_df(gmp_results, extract_moran_info, .id = \"kpi\") %>%\n    mutate(time_period = time_period)\n  \n  return(moran_summary)\n}\n\n# Apply the function to each dataset (pre_covid_agg, covid_agg, post_covid_agg)\nall_gmp_summaries <- map2_df(agg_datasets, time_periods, compute_moran_summary)\n```\n:::\n\n\n\nAfter running the analysis, we combine all Moran's I results into a single dataframe for easy interpretation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(all_gmp_summaries)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-65b7328530dcdf303887\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-65b7328530dcdf303887\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"no_tourist_all\",\"revenue_foreign\",\"revenue_thai\",\"avg_revenue_all\",\"no_tourist_all\",\"revenue_foreign\",\"revenue_thai\",\"avg_revenue_all\",\"no_tourist_all\",\"revenue_foreign\",\"revenue_thai\",\"avg_revenue_all\"],[\"2.093699e-03\",\"-1.429908e-02\",\"-7.450286e-02\",\"3.064879e-01\",\"-4.224657e-02\",\"-2.310979e-02\",\"-7.458954e-02\",\"3.441867e-01\",\"5.661329e-03\",\"-5.044771e-02\",\"-2.454802e-02\",\"1.137785e-01\"],[\"6.6e-01\",\"7.4e-01\",\"1.2e-01\",\"0e+00\",\"4.4e-01\",\"7e-01\",\"1.8e-01\",\"0e+00\",\"7e-01\",\"2.4e-01\",\"9.8e-01\",\"6e-02\"],[\"No spatial dependence\",\"No spatial dependence\",\"No spatial dependence\",\"Spatial dependence detected\",\"No spatial dependence\",\"No spatial dependence\",\"No spatial dependence\",\"Spatial dependence detected\",\"No spatial dependence\",\"No spatial dependence\",\"No spatial dependence\",\"No spatial dependence\"],[\"pre_covid\",\"pre_covid\",\"pre_covid\",\"pre_covid\",\"covid\",\"covid\",\"covid\",\"covid\",\"post_covid\",\"post_covid\",\"post_covid\",\"post_covid\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>kpi<\\/th>\\n      <th>moran_I<\\/th>\\n      <th>p_value<\\/th>\\n      <th>interpretation<\\/th>\\n      <th>time_period<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"kpi\",\"targets\":1},{\"name\":\"moran_I\",\"targets\":2},{\"name\":\"p_value\",\"targets\":3},{\"name\":\"interpretation\",\"targets\":4},{\"name\":\"time_period\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations:**\n\n- For most KPIs, **total tourists, revenues from foreign or Thai tourists**, across all time periods, we **do not reject the null hypothesis**, as the p-values are significantly higher than the threshold of 0.05. This means there is **no evidence of spatial dependence** for these indicators. \n\n- However, for **average revenue per tourist**, the p-values are consistent below the alpha value (<0.05) across all periods. Therefore, we reject the null hypothesis for this indicator. This suggests that average revenue per tourist tends to cluster spatially across time periods. \n\n- Both of these observations is consistent with observations from previous sections. Notably, the spatial clustering for **average revenue per tourist** indicator weakens in the post-covid period, observed from the drop in Moran's I value post-covid, suggesting that the pandemic may have disrupted tourism patterns but residual clustering persists.\n\n:::\n\n### Local Spatial Autocorrelation Analysis Across Time Periods\n\nIn this subsection, we will perform local spatial autocorrelation analysis across time periods using Local Moran's I. \n\nSimilar to previous sections, we will reuse existing local spatial custom functions to iterate through the three time periods to produce the results. The results for each time period are saved locally and read from the files for further analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nset.seed(1234)\ntime_periods <- c(\"pre_covid\", \"covid\", \"post_covid\")\nagg_datasets <- list(pre_covid_agg, covid_agg, post_covid_agg)\nkpis <- c(\"no_tourist_all\", \"revenue_foreign\", \"revenue_thai\", \"avg_revenue_all\")\n\nfor (i in seq_along(agg_datasets)) {\n  # ungroup to avoid error in local moran computation\n  current_dataset <- agg_datasets[[i]] %>% ungroup()\n  # Compute local Moran's I for each KPI in the current dataset\n  lmp_summary_tp <- map_df(kpis, ~compute_local_moran_df(current_dataset, \n                                                      .x, \n                                                      nb_knn_5, \n                                                      knn5_weights_inv))\n  \n  # Save the result with the corresponding time period in the filename\n  write_rds(lmp_summary_tp, file = paste0(\"data/rds/lmp_summary_\", time_periods[i], \".rds\"))\n}\n```\n:::\n\n\n\nWe save the results and read them one by one:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlmp_summary_pre_covid <- read_rds(\"data/rds/lmp_summary_pre_covid.rds\")\nlmp_summary_covid <- read_rds(\"data/rds/lmp_summary_covid.rds\")\nlmp_summary_post_covid <- read_rds(\"data/rds/lmp_summary_post_covid.rds\")\n```\n:::\n\n\n\n#### Total no. of tourists\n\nThis subsection presents the local spatial autocorrelation analysis (Local Moran's I and LISA maps) for the **total number of tourists** across three different time periods: **Pre-Covid**, **Covid**, and **Post-Covid**.\n\n::: panel-tabset\n\n##### Pre-Covid\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"no_tourist_all\",lmp_summary_pre_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_no_tourist_all_pre-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_kpi(\"no_tourist_all\", lmp_summary_pre_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_no_tourist_all_pre-1.png){width=1152}\n:::\n:::\n\n\n\n\n##### Covid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"no_tourist_all\",lmp_summary_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_no_tourist_all_covid-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_kpi(\"no_tourist_all\", lmp_summary_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_no_tourist_all_covid-1.png){width=1152}\n:::\n:::\n\n\n\n\n##### Post-Covid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"no_tourist_all\",lmp_summary_post_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_no_tourist_all_post-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_kpi(\"no_tourist_all\", lmp_summary_post_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_no_tourist_all_post-1.png){width=1152}\n:::\n:::\n\n\n\n\n:::\n\n::: callout-note\n\n**Observations:**\n\nAcross the three time periods, we can notice that there are persistent **Low-Low** clusters in the northeast provinces.\n\n- Interestingly, a **High-Low cluster** emerges in the southern part of Thailand (Songkhla area) during the Covid period.\n\n:::\n\n#### Revenue\n\nThis subsection presents the local spatial autocorrelation analysis (Local Moran's I and LISA maps) for the **revenue** across three different time periods: **Pre-Covid**, **Covid**, and **Post-Covid**.\n\n::: panel-tabset\n##### Pre-Covid\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"revenue_foreign\",lmp_summary_pre_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_revenue_foreign_pre-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"revenue_thai\",lmp_summary_pre_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_revenue_thai_pre-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_multiple_kpis(c(\"revenue_foreign\", \"revenue_thai\"), lmp_summary_pre_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_revenue_foreign_pre-1.png){width=1152}\n:::\n:::\n\n\n\n\n##### Covid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"revenue_foreign\",lmp_summary_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_revenue_foreign_covid-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"revenue_thai\",lmp_summary_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_revenue_thai_covid-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_multiple_kpis(c(\"revenue_foreign\", \"revenue_thai\"), lmp_summary_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_revenue_foreign_covid-1.png){width=1152}\n:::\n:::\n\n\n\n\n##### Post-Covid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"revenue_foreign\",lmp_summary_post_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_revenue_foreign_post-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"revenue_thai\",lmp_summary_post_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_revenue_thai_post-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_multiple_kpis(c(\"revenue_foreign\", \"revenue_thai\"), lmp_summary_post_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_revenue_foreign_post-1.png){width=1152}\n:::\n:::\n\n\n\n\n:::\n\n::: callout-note\n\n**Observations:**\n\n- For Thai Revenue, we can notice that there are persistent **Low-Low** clusters in the northeast provinces such as Ubon-Ratchathani across all time periods.\n\n- For Foreign Revenue, we can notice that there are persistent **Low-Low** clusters in the northwest provinces such as Suphanburi across all time periods.\n\n- Khanaburi province form as **Low-Low** cluster for foreign revenue during Covid and post-Covid. This suggests potential challenges in attracting foreign tourists to the area even after the pandemic.\n\n:::\n\n\n#### Avg Revenue/Tourist\n\nThis subsection presents the local spatial autocorrelation analysis (Local Moran's I and LISA maps) for the **average revenue per tourist** across three different time periods: **Pre-Covid**, **Covid**, and **Post-Covid**.\n\n\n::: panel-tabset\n\n##### Pre-Covid\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"avg_revenue_all\",lmp_summary_pre_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_avg_revenue_all_pre-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_kpi(\"avg_revenue_all\", lmp_summary_pre_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_avg_revenue_all_pre-1.png){width=1152}\n:::\n:::\n\n\n\n\n##### Covid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"avg_revenue_all\",lmp_summary_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_avg_revenue_all_covid-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_kpi(\"avg_revenue_all\", lmp_summary_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_avg_revenue_all_covid-1.png){width=1152}\n:::\n:::\n\n\n\n\n##### Post-Covid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_local_moran_kpi(\"avg_revenue_all\",lmp_summary_post_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lm_avg_revenue_all_post-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_lisa_kpi(\"avg_revenue_all\", lmp_summary_post_covid)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/lisa_avg_revenue_all_post-1.png){width=1152}\n:::\n:::\n\n\n\n:::\n\n**Observations:**\n\n- During Pre-Covid, Phuket and surrounding southern provinces formed a **High-High** cluster for average revenue per tourist indicator, indicating a strong concentration of high average revenues from tourists in this region.\n\n- During Covid, the **High-High** cluster around Phuket remains strong in the Phuket region but seems to extend less into nearby provinces, suggesting a hit on the tourist industry in the region.\n\n- During Post-Covid, the **High-High** cluster in Phuket remains but appears to be less pronounced compared to pre-Covid levels, possibly reflecting a slow recovery.\n\nIn other areas, there is a persistence of **Low-Low** clustters in the northeastern provinces throughout the different phases of the pandemic.\n\n:::\n\n## Emerging Hotspot Analysis\n\nThe goal of Emerging Hotspot Analysis (EHSA) is to assess how hotspots (areas of high activity) and coldspots (areas of low activity) evolve over time. EHSA helps answer key questions such as: Are hotspots becoming increasingly pronounced? Are coldspots cooling down further? Or are these areas maintaining the same pattern over time? In the context of tourism, emerging hotspot analysis can reveal regions that are consistently experiencing high or low levels of tourist activity or revenue, helping policymakers and business owners make data-driven decisions.\n\nTo achieve this, we will first construct a **space-time cube** to capture the spatial and temporal dimensions of the data. Then, we will compute the **Getis-Ord Gi* statistic**, which identifies clusters of high or low values spatially. Following this, we will evaluate the trends of these hotspots and coldspots over time using the **Mann-Kendall Trend Test**, which assesses the significance of these trends. After that, we can utilizing the `emerging_hotspot_analysis()` function from the **sfdep**  to detect and visualize emerging patterns over time.\n\n\n### Computing Gi*\n\nIn this subsection, we will compute the Gi\\* statistics. We will use the `tourism_st` object from earlier section to identify neigbours and derive an inverse distance weights.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_nb <- tourism_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_knn(geometry, k = 5)),\n         wt = st_inverse_distance(nb, \n                                       geometry,\n                                       scale = 1, \n                                       alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n\n\n::: callout-tip\n\n- `activate(\"geometry\")`: Activates the geometry context for spatial operations.\n- `mutate()`: Adds two columns:\n  - `nb`: Neighbors, including the observation itself (`include_self`), using spatial contiguity (`st_contiguity`).\n  - `wt`: Weights, calculated with inverse distance (`st_inverse_distance`).\n- `set_nbs()` and `set_wts()`: Copies neighbors and weights to all time-slices. Ensure row order consistency after using these functions.\n\n:::\n\nTo calculate the local Gi* statistic for each location:\n\n1. **Group by `date_int`:** This ensures we calculate Gi* separately for each month, year in the dataset.\n2. **Use `local_gstar_perm()`:** This function computes the local Gi* statistic using the GDPPC values, neighbors (`nb`), and weights (`wt`).\n3. **Unnest the Gi* results:** The `gi_star` column is nested, so we use `unnest()` to extract the results into a clean format.\n\nWe will do this iteratively for each KPI using a custom function that saves the computed result locally.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nkpis <- c(\"no_tourist_all\", \"revenue_foreign\", \"revenue_thai\", \"avg_revenue_all\")\n\n# Function to compute Gi* and save the results\ncompute_and_save_gi_star <- function(kpi) {\n  gi_stars <- tourism_nb %>%\n    group_by(date_int) %>%\n    mutate(gi_star = local_gstar_perm(!!sym(kpi), nb, wt)) %>%\n    tidyr::unnest(gi_star)\n\n  write_rds(gi_stars, file = paste0(\"data/rds/gi_stars_\", kpi, \".rds\"))\n}\n\npurrr::walk(kpis, compute_and_save_gi_star)\n```\n:::\n\n\n\nWe read the results for further analysis:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars_tourist <- read_rds(\"data/rds/gi_stars_no_tourist_all.rds\")\ngi_stars_rev_fore <- read_rds(\"data/rds/gi_stars_revenue_foreign.rds\")\ngi_stars_rev_thai <- read_rds(\"data/rds/gi_stars_revenue_thai.rds\")\ngi_stars_avg_rev_all <- read_rds(\"data/rds/gi_stars_avg_revenue_all.rds\")\n```\n:::\n\n\n\n### Mann-Kendall Test\n\nThe Mann-Kendall Test is used to determine whether a time series has a monotonic upward or downward trend. \n\nWe would like to test the following hypothesis for each KPI:\n\n$H_0$: No monotonic trend\n\n$H_1$: Monotonic trend is present (either positive, or negative)\n\nRefer to [Mann-Kendall Test For Monotonic Trend](https://vsp.pnnl.gov/help/vsample/design_trend_mann_kendall.htm)\n\nSimilarly, we will do this iteratively for each KPI using a custom function that saves the computed result locally. In essence, this function performs the Mann-Kendall test for each province to assess trends in Gi* statistics, then filters by significance level and extracts the top k emerging hotspots by absolute tau values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ncompute_emerging_hotspots <- function(gi_stars, top_k, sig_level) {\n  # Perform Mann-Kendall trend test\n  ehsa <- gi_stars %>%\n    group_by(province_eng) %>%\n    summarise(mk = list(unclass(Kendall::MannKendall(gi_star)))) %>%\n    tidyr::unnest_wider(mk)\n  \n  # Filter by significance level (sl) and extract top k emerging hotspots\n  emerging <- ehsa %>%\n    filter(sl < sig_level) %>%\n    arrange(sl, abs(tau)) %>%\n    slice(1:top_k) \n  \n  return(emerging)\n}\n```\n:::\n\n\n\n::: panel-tabset\n\n#### Total no. of tourists\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neh_tourist <- compute_emerging_hotspots(gi_stars_tourist, 10, 0.05)\ndatatable(eh_tourist)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1990be7a07e95fee1522\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1990be7a07e95fee1522\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Phatthalung\",\"Trang\",\"Suphan Buri\",\"Nakhon Si Thammarat\",\"Phra Nakhon Si Ayutthaya\",\"Ang Thong\",\"Songkhla\",\"Sing Buri\",\"Uthai Thani\",\"Lop Buri\"],[-0.5248979330062866,-0.5167347192764282,0.508571445941925,-0.4987755119800568,0.5004081726074219,0.4791836738586426,-0.4710204005241394,0.4661224484443665,0.4628571569919586,0.4563265442848206],[7.863246764827636e-08,1.24617500318891e-07,2.384185791015625e-07,3.350833424065058e-07,3.576278686523438e-07,9.5367431640625e-07,1.4488956594505e-06,1.9073486328125e-06,2.145767211914062e-06,3.099441528320312e-06],[-643,-633,623,-611,613,587,-577,571,567,559],[1225,1225,1225,1225,1225,1225,1225,1225,1225,1225],[14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>province_eng<\\/th>\\n      <th>tau<\\/th>\\n      <th>sl<\\/th>\\n      <th>S<\\/th>\\n      <th>D<\\/th>\\n      <th>varS<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"province_eng\",\"targets\":1},{\"name\":\"tau\",\"targets\":2},{\"name\":\"sl\",\"targets\":3},{\"name\":\"S\",\"targets\":4},{\"name\":\"D\",\"targets\":5},{\"name\":\"varS\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations:**\n\nThe 10 provinces, including Phatthalung, Trang, Suphan Buri, Nakhon Si Thammarat, Phra Nakhon Si Ayutthaya, Ang Thong, Songkhla, Sing Buri, Uthai Thani, and Lop Buri, show significant trends with very small p-values (below alpha <0.05), indicating strong statistical significance. \n\nNegative tau values (e.g., Phatthalung, Trang, Nakhon Si Thammarat) suggest a decreasing trend, potentially indicating coldspots, while positive tau values (e.g., Suphan Buri, Phra Nakhon Si Ayutthaya, Sing Buri) reflect an increasing trend, implying emerging hotspots in terms of tourist inflow in these areas.\n\n:::\n\n#### Revenue\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neh_rev_fore <- compute_emerging_hotspots(gi_stars_rev_fore, 10, 0.05)\ndatatable(eh_rev_fore)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-28cf82553809b695f76c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-28cf82553809b695f76c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Phatthalung\",\"Trang\",\"Nakhon Si Thammarat\",\"Ranong\",\"Chumphon\",\"Chon Buri\",\"Trat\",\"Chanthaburi\",\"Rayong\",\"Sa Kaeo\"],[-0.6293877363204956,-0.6293877363204956,-0.6261224746704102,-0.6244897842407227,-0.5722448825836182,-0.5004081726074219,-0.4922448992729187,-0.4693877696990967,-0.4612244963645935,-0.4579591751098633],[1.187354520260087e-10,1.187354520260087e-10,1.479432271134229e-10,1.650727193824864e-10,4.758613947331014e-09,3.066834608489444e-07,4.762437129102182e-07,1.575378405505035e-06,2.384326080573373e-06,2.808903218465275e-06],[-771,-771,-767,-765,-701,-613,-603,-575,-565,-561],[1225,1225,1225,1225,1225,1225,1225,1225,1225,1225],[14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>province_eng<\\/th>\\n      <th>tau<\\/th>\\n      <th>sl<\\/th>\\n      <th>S<\\/th>\\n      <th>D<\\/th>\\n      <th>varS<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"province_eng\",\"targets\":1},{\"name\":\"tau\",\"targets\":2},{\"name\":\"sl\",\"targets\":3},{\"name\":\"S\",\"targets\":4},{\"name\":\"D\",\"targets\":5},{\"name\":\"varS\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations (Foreign Revenue):**\n\nThe 10 provinces, including Phatthalung, Trang, Nakhon Si Thammarat, Ranong, Chumphon, Chon Buri, Trat, Chanthaburi, Rayong, and Sa Kaeo, show significant trends in foreign revenue with very small p-values (all below alpha <0.05), indicating strong statistical significance.\n\nNegative tau values across all provinces (e.g., Phatthalung, Trang, Nakhon Si Thammarat) suggest a decreasing trend in foreign revenue, potentially indicating coldspots where foreign revenue are declining.\n\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neh_rev_thai <- compute_emerging_hotspots(gi_stars_rev_thai, 10, 0.05)\ndatatable(eh_rev_thai)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-988252b1f4f7d9d645fb\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-988252b1f4f7d9d645fb\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Trat\",\"Chanthaburi\",\"Prachuap Khiri Khan\",\"Phayao\",\"Nan\",\"Pattani\",\"Narathiwat\",\"Satun\",\"Songkhla\",\"Si Sa Ket\"],[0.5346938967704773,0.5461224317550659,0.5722448825836182,0.5771428346633911,0.5983673334121704,-0.5281632542610168,-0.5265306234359741,-0.5265306234359741,-0.5167347192764282,-0.5118367075920105],[0,0,0,0,0,6.528084384171962e-08,7.165611037862618e-08,7.165611037862618e-08,1.24617500318891e-07,1.637378659324895e-07],[655,669,701,707,733,-647,-645,-645,-633,-627],[1225,1225,1225,1225,1225,1225,1225,1225,1225,1225],[14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>province_eng<\\/th>\\n      <th>tau<\\/th>\\n      <th>sl<\\/th>\\n      <th>S<\\/th>\\n      <th>D<\\/th>\\n      <th>varS<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"province_eng\",\"targets\":1},{\"name\":\"tau\",\"targets\":2},{\"name\":\"sl\",\"targets\":3},{\"name\":\"S\",\"targets\":4},{\"name\":\"D\",\"targets\":5},{\"name\":\"varS\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations (Thai Revenue):**\n\nThe 10 provinces, including Trat, Chanthaburi, Prachuap Khiri Khan, Phayao, Nan, Pattani, Narathiwat, Satun, Songkhla, and Si Sa Ket, show significant trends in Thai revenue with very small p-values (all below alpha <0.05), indicating strong statistical significance. \n\nPositive tau values (e.g., Nan, Phayao, Trat) suggest an increasing trend in Thai revenue, potentially highlighting emerging hotspots, while negative tau values (e.g., Pattani, Narathiwat, Songkhla) indicate a decreasing trend, suggesting coldspots where Thai revenue may be declining.\n\n:::\n\n#### Avg Revenue / Tourist\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neh_avg_rev_all <- compute_emerging_hotspots(gi_stars_avg_rev_all, 10, 0.05)\ndatatable(eh_avg_rev_all)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-13a8be463c5fb2457ee4\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-13a8be463c5fb2457ee4\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Tak\",\"Sukhothai\",\"Kamphaeng Phet\",\"Prachin Buri\",\"Phichit\",\"Uttaradit\",\"Phitsanulok\",\"Phrae\",\"Phetchabun\",\"Chumphon\"],[0.5673469305038452,0.5804081559181213,0.5885714292526245,0.5967347025871277,0.6097959280014038,0.6097959280014038,0.6310204267501831,0.6669387817382812,0.6734693646430969,-0.6342856884002686],[0,0,0,0,0,0,0,0,0,8.519521893513016e-11],[695,711,721,731,747,747,773,817,825,-777],[1225,1225,1225,1225,1225,1225,1225,1225,1225,1225],[14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875,14291.6669921875]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>province_eng<\\/th>\\n      <th>tau<\\/th>\\n      <th>sl<\\/th>\\n      <th>S<\\/th>\\n      <th>D<\\/th>\\n      <th>varS<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"province_eng\",\"targets\":1},{\"name\":\"tau\",\"targets\":2},{\"name\":\"sl\",\"targets\":3},{\"name\":\"S\",\"targets\":4},{\"name\":\"D\",\"targets\":5},{\"name\":\"varS\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations (Average Revenue per Tourist):**\n\nThe 10 provinces, including Tak, Sukhothai, Kamphaeng Phet, Prachin Buri, Phichit, Uttaradit, Phitsanulok, Phrae, Phetchabun, and Chumphon, show significant trends in average revenue per tourist with very small p-values (all below alpha <0.05), indicating strong statistical significance. \n\nPositive tau values (e.g., Phrae, Phitsanulok, Phichit) suggest an increasing trend in average revenue per tourist, potentially indicating growing tourist spending in these areas. Chumphon, with a negative tau value, shows a decreasing trend, suggesting a potential decline in average revenue per tourist.\n\n:::\n\n:::\n\n### Performing Emerging Hotspot Analysis\n\nTo perform Emerging Hotspot Analysis (EHSA), we can use the `emerging_hotspot_analysis()` function from the `sfdep` package. This function analyzes spatio-temporal trends by detecting areas that are hotspots over time. It takes the following parameters:\n- `x`: The spacetime object (e.g., `GDPPC_st`).\n- `.var`: The variable of interest (e.g., `\"GDPPC\"`).\n- `k`: Number of time lags (default is 1).\n- `nsim`: Number of simulations to run (e.g., 99).\n\nWe will use a for loop to iteratively compute for the selected KPIs.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nset.seed(1234)\nkpis <- c(\"no_tourist_all\", \"revenue_foreign\", \"revenue_thai\", \"avg_revenue_all\")\n\n# Loop through the KPIs\nfor (kpi in kpis) {\n  \n  # Perform the Emerging Hotspot Analysis for the current KPI\n  ehsa_result <- emerging_hotspot_analysis(\n    x = tourism_st, \n    .var = kpi, \n    k = 1, \n    nsim = 99\n  )\n  \n  # Save the result with a file name based on the current KPI\n  save_file <- paste0(\"data/rds/ehsa_\", kpi, \".rds\")\n  write_rds(ehsa_result, file = save_file)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_tourist <- read_rds(\"data/rds/ehsa_no_tourist_all.rds\")\nehsa_rev_fore <- read_rds(\"data/rds/ehsa_revenue_foreign.rds\")\nehsa_rev_thai <- read_rds(\"data/rds/ehsa_revenue_thai.rds\")\nehsa_avg_rev_all <- read_rds(\"data/rds/ehsa_avg_revenue_all.rds\")\n```\n:::\n\n\n\n\n### Visualizing Distribution of EHSA Classes and Maps\n\nTo visualize the distribution of EHSA classifications, we will create an interactive bar chart using `ggplotly` based on the EHSA results.\n\nFor visualizing the geographic distribution of EHSA classes, we need to join the *admin_boundary* data with the corresponding *ehsa* object (e.g., `ehsa_tourist`) before plotting. Note that in this case, we have filtered the data to include only statistically significant results.\n\n::: panel-tabset\n\n#### Total no. of tourists\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_tourist_sig <- ehsa_tourist %>%\n  filter(p_value < 0.05)\n\nggplotly(ggplot(ehsa_tourist_sig, aes(x = classification)) + geom_bar())\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-9acb472f3bc023769b12\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9acb472f3bc023769b12\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.89999999999999991,0.90000000000000013],\"base\":[0,0],\"x\":[1,2],\"y\":[41,1],\"text\":[\"count: 41<br />classification: no pattern detected\",\"count:  1<br />classification: oscilating coldspot\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(89,89,89,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283108,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":37.260273972602747},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,2.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"no pattern detected\",\"oscilating coldspot\"],\"tickvals\":[1,2],\"categoryorder\":\"array\",\"categoryarray\":[\"no pattern detected\",\"oscilating coldspot\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"classification\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-2.0500000000000003,43.049999999999997],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\",\"40\"],\"tickvals\":[0,9.9999999999999982,20,29.999999999999996,40],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\",\"40\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"count\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"147573dead688\":{\"x\":{},\"type\":\"bar\"}},\"cur_data\":\"147573dead688\",\"visdat\":{\"147573dead688\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntourist_ehsa <- admin_boundary %>%\n  left_join(ehsa_tourist,\n            by = join_by(province_eng == location))\n\nsig_tourist_ehsa <- tourist_ehsa  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(tourist_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(sig_tourist_ehsa ) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(title = \"EHSA Classification of Tourist Nums.\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/ehsa_tourist_viz-1.png){width=1152}\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations**:\n\nBoth the bar chart and the choropleth map display the classification of statistically significant hotspots or coldspots for the total number of tourists (alpha < 0.05). \n\n\nFrom the bar chart we can notice most regions (over 40) are classified as \"no pattern detected,\" meaning no significant trends were found, while a few regions are classified as \"oscillating coldspot,\" indicating fluctuating coldspot patterns over time.\n\nThis is reflected on the choropleth map which provides a geographic representation of these classifications. Regions in green are marked as \"no pattern detected,\" spread across much of Thailand, while only a small region (in yellow) is classified as an \"oscillating coldspot.\" The remaining grey regions represent regions with no statistically significant patterns.\n\n:::\n\n\n#### Revenue\n\n**Foreign Revenue**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_rev_fore_sig <- ehsa_rev_fore %>%\n  filter(p_value < 0.05)\n\nggplotly(ggplot(ehsa_rev_fore_sig, aes(x = classification)) + geom_bar())\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-887d9d3e739065d53985\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-887d9d3e739065d53985\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.89999999999999991,0.90000000000000013,0.90000000000000036],\"base\":[0,0,0],\"x\":[1,2,3],\"y\":[7,10,1],\"text\":[\"count:  7<br />classification: no pattern detected\",\"count: 10<br />classification: sporadic coldspot\",\"count:  1<br />classification: sporadic hotspot\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(89,89,89,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283108,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":48.949771689497723},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,3.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"no pattern detected\",\"sporadic coldspot\",\"sporadic hotspot\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"no pattern detected\",\"sporadic coldspot\",\"sporadic hotspot\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"classification\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.5,10.5],\"tickmode\":\"array\",\"ticktext\":[\"0.0\",\"2.5\",\"5.0\",\"7.5\",\"10.0\"],\"tickvals\":[0,2.5,5,7.5,10],\"categoryorder\":\"array\",\"categoryarray\":[\"0.0\",\"2.5\",\"5.0\",\"7.5\",\"10.0\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"count\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"1475721a0f7b3\":{\"x\":{},\"type\":\"bar\"}},\"cur_data\":\"1475721a0f7b3\",\"visdat\":{\"1475721a0f7b3\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n**Thai Revenue**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_rev_thai_sig <- ehsa_rev_thai %>%\n  filter(p_value < 0.05)\n\nggplotly(ggplot(ehsa_rev_thai_sig, aes(x = classification)) + geom_bar())\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-54549f4c10c17d05b981\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-54549f4c10c17d05b981\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.89999999999999991,0.90000000000000013,0.90000000000000036,0.90000000000000036],\"base\":[0,0,0,0],\"x\":[1,2,3,4],\"y\":[45,1,12,5],\"text\":[\"count: 45<br />classification: no pattern detected\",\"count:  1<br />classification: oscilating coldspot\",\"count: 12<br />classification: sporadic coldspot\",\"count:  5<br />classification: sporadic hotspot\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(89,89,89,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283108,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":37.260273972602747},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,4.5999999999999996],\"tickmode\":\"array\",\"ticktext\":[\"no pattern detected\",\"oscilating coldspot\",\"sporadic coldspot\",\"sporadic hotspot\"],\"tickvals\":[1,2,3,4],\"categoryorder\":\"array\",\"categoryarray\":[\"no pattern detected\",\"oscilating coldspot\",\"sporadic coldspot\",\"sporadic hotspot\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"classification\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-2.25,47.25],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\",\"40\"],\"tickvals\":[0,10,20,30,40],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\",\"40\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"count\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"147574f00886b\":{\"x\":{},\"type\":\"bar\"}},\"cur_data\":\"147574f00886b\",\"visdat\":{\"147574f00886b\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n**Combined Choropleth Map**\n\nNote that as Foreign Revenue has 3 categories, while Thai Revenue has 4 categories, we have pegged the classification with fixed colors for comparison.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Define the color palette\nclassification_colors <- c(\"no pattern detected\" = \"turquoise3\", \n                           \"oscillating coldspot\" = \"yellow2\", \n                           \"sporadic coldspot\" = \"mediumpurple1\", \n                           \"sporadic hotspot\" = \"tomato\")\n\n# Create first map (Foreign Revenue)\nrev_fore_ehsa <- admin_boundary %>%\n  left_join(ehsa_rev_fore, by = join_by(province_eng == location))\n\nsig_rev_fore_ehsa <- rev_fore_ehsa %>%\n  filter(p_value < 0.05)\n\nmap_fore <- tm_shape(rev_fore_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(sig_rev_fore_ehsa) +\n  tm_fill(\"classification\", palette = classification_colors) + \n  tm_borders(alpha = 0.4) +\n  tm_layout(title = \"EHSA Classification of Foreign Revenue\")\n\n# Create second map (Thai Revenue)\nrev_thai_ehsa <- admin_boundary %>%\n  left_join(ehsa_rev_thai, by = join_by(province_eng == location))\n\nsig_rev_thai_ehsa <- rev_thai_ehsa %>%\n  filter(p_value < 0.05)\n\nmap_thai <- tm_shape(rev_thai_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(sig_rev_thai_ehsa) +\n  tm_fill(\"classification\", palette = classification_colors) + \n  tm_borders(alpha = 0.4) +\n  tm_layout(title = \"EHSA Classification of Thai Revenue\")\n\ntmap_arrange(map_fore, map_thai, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/ehsa_rev_viz-1.png){width=1152}\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations (Foreign & Thai Revenue)**:\n\nBoth the bar chart and the choropleth map show the classification of statistically significant (alpha < 0.05). hotspots or coldspots for foreign and thai revenue respectively.\n\nFor **foreign revenue**, most regions are classified as \"sporadic coldspot,\" indicating inconsistent periods of lower foreign revenue. Some regions are marked as \"no pattern detected,\" meaning no significant trends were observed, while only a few regions are classified as \"sporadic hotspot,\" suggesting inconsistent periods of higher foreign revenue.\n\nFor **thai revenue**, the majority of regions are classified as \"no pattern detected,\" indicating no clear trends in Thai revenue. Some regions are marked as \"sporadic coldspot,\" meaning these areas experience inconsistent periods of lower Thai revenue, while a smaller number of regions are classified as \"sporadic hotspot,\" showing intermittent periods of higher Thai revenue.\n\nFrom the choropleth map for these two categories, we can notice some salient differences in the geographic distribution of these revenue sources. Notably, the Thai revenue map has a more diverse classification, with a significant number of \"sporadic hotspots\" (red), particularly in northern Thailand, which are not present on the foreign revenue map. From the maps, we can also notice that both revenue sources share the same sporadic coldspots cluster if not, they appear side by side if we overlap the maps.\n\n:::\n\n#### Avg Revenue / Tourist\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_avg_rev_all_sig <- ehsa_avg_rev_all %>%\n  filter(p_value < 0.05)\n\nggplotly(ggplot(ehsa_avg_rev_all_sig, aes(x = classification)) + geom_bar())\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-b4cf0a3b63a2d9e314a9\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b4cf0a3b63a2d9e314a9\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.89999999999999991,0.90000000000000013,0.90000000000000036,0.90000000000000036],\"base\":[0,0,0,0],\"x\":[1,2,3,4],\"y\":[16,1,35,16],\"text\":[\"count: 16<br />classification: no pattern detected\",\"count:  1<br />classification: oscilating coldspot\",\"count: 35<br />classification: sporadic coldspot\",\"count: 16<br />classification: sporadic hotspot\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(89,89,89,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283108,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":37.260273972602747},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,4.5999999999999996],\"tickmode\":\"array\",\"ticktext\":[\"no pattern detected\",\"oscilating coldspot\",\"sporadic coldspot\",\"sporadic hotspot\"],\"tickvals\":[1,2,3,4],\"categoryorder\":\"array\",\"categoryarray\":[\"no pattern detected\",\"oscilating coldspot\",\"sporadic coldspot\",\"sporadic hotspot\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"classification\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1.75,36.75],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\"],\"tickvals\":[0,10,20,30],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"count\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"14757325bbb46\":{\"x\":{},\"type\":\"bar\"}},\"cur_data\":\"14757325bbb46\",\"visdat\":{\"14757325bbb46\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\navg_rev_all_ehsa <- admin_boundary %>%\n  left_join(ehsa_avg_rev_all,\n            by = join_by(province_eng == location))\n\nsig_avg_rev_all_ehsa <- avg_rev_all_ehsa  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(avg_rev_all_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(sig_avg_rev_all_ehsa ) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(title = \"EHSA Classification of Avg Revenue/Tourist\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/ehsa_avg_rev_all_viz-1.png){width=1152}\n:::\n:::\n\n\n\n::: callout-note\n\n**Observations**:\n\nBoth the bar chart and the choropleth map show the classification of statistically significant hotspots or coldspots for average revenue per tourist (alpha < 0.05).\n\nFrom the bar chart, we can observe that most regions are classified as \"sporadic coldspot,\" indicating inconsistent periods of lower revenue, while a significant number of regions are marked as \"sporadic hotspot,\" showing intermittent periods of higher average revenue. Only a small number of regions show \"oscilating coldspot\"\n\nThe choropleth map provides a geographic representation of these classifications. Red regions indicate \"sporadic hotspots,\" while purple regions represent \"sporadic coldspots.\" Green areas show \"no pattern detected,\" and the few yellow areas represent \"oscillating coldspot.\" The remaining gray regions indicate areas with no statistically significant patterns. These regions with different are intermixed throughout Thailand. \n\n:::\n\n:::\n\n\n## Conclusion\n\nThis report explored how COVID-19 impacted Thailand's tourism economy through spatial and spatio-temporal analysis to identify whether key tourism indicators were spatially independent and, if dependent, to locate clusters, outliers, and emerging hotspot/coldspot areas. Our findings revealed the following:\n\n1. **Spatial Independence:**\n   - For most indicators like **total tourists, foreign and Thai revenues**, the results indicated no significant spatial dependence across the country. This suggests that these economic factors were relatively independent in space.\n   - However, engineered features such as **average revenue per tourist** has showed persistent spatial clustering, with higher average spending per tourist clustering in the southern regions, particularly in provinces like Phuket.\n   \n2. **Local Spatial Clusters:**\n   - The LISA analysis revealed consistent **low-low clusters** in the northeastern provinces for indicators like tourist numbers and revenues, suggesting these regions consistently performed below the national average.\n   - On the other hand, Phuket and nearby southern regions were frequently identified as **high-high clusters** for average revenue per tourist, further reinforcing the economic significance of tourism in these areas.\n   \n3. **Spatio-Temporal Patterns Across Time Periods:**\n   - The spatial dependence in **average revenue per tourist** persisted across pre-COVID, COVID, and post-COVID periods, although the strength of clustering weakened in the post-pandemic phase, indicating some disruption caused by the pandemic.\n\n4. **Emerging Hotspots:**\n   - The EHSA identified several regions with evolving patterns over time. Notably, central and southern regions displayed sporadic hotspot patterns for both **Thai revenue and average revenue per tourist indictators.\n\nIn summary, while the pandemic significantly disrupted Thailand's tourism economy, spatial analysis revealed persistent geographic trends, particularly in average tourist spending. We hope these insights can guide policymakers and tourism stakeholders in better decision making and strategy making to revitalize the tourism industry in Thailand with consideration to the different characteristics of each region.\n   \n## References\n\n- [Thailand Tourism EDA](https://www.kaggle.com/code/sarinkitchatr/thailand-tourism-eda)\n- [Timeline of the COVID-19 pandemic in Thailand - Wikipedia](https://en.wikipedia.org/wiki/Timeline_of_the_COVID-19_pandemic_in_Thailand)\n- [Thailand - Full Restrictions, Travel regulations, Coronavirus regulations, travel bans - Travelbans](https://travelbans.org/en/asia/thailand/full-restrictions)\n- [Thailand ends COVID-19 Emergency Decree on 30 September 2022 - TAT Newsroom](https://www.tatnews.org/2022/09/thailand-ends-covid-19-emergency-decree-on-30-september-2022/)\n- [Hot spots, cluster detection and spatial outlier analysis of teen birth rates in the U.S., 2003–2012 - PMC](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5618106/)\n- [KNN Hyperparameters: A Friendly Guide to Optimization - ProgrammingR](https://www.programmingr.com/knn-hyperparameters-a-friendly-guide-to-optimization/)\n\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}